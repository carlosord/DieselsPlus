/*
 * generated by Xtext 2.9.0
 */
grammar InternalModelDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package uo.diesels.model.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uo.diesels.model.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uo.diesels.model.services.ModelDslGrammarAccess;

}
@parser::members {
	private ModelDslGrammarAccess grammarAccess;

	public void setGrammarAccess(ModelDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
		(rule__Model__ElementsAssignment)*
		{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAllModelType
entryRuleAllModelType
:
{ before(grammarAccess.getAllModelTypeRule()); }
	 ruleAllModelType
{ after(grammarAccess.getAllModelTypeRule()); } 
	 EOF 
;

// Rule AllModelType
ruleAllModelType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAllModelTypeAccess().getAlternatives()); }
		(rule__AllModelType__Alternatives)
		{ after(grammarAccess.getAllModelTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getAlternatives()); }
		(rule__Entity__Alternatives)
		{ after(grammarAccess.getEntityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelType
entryRuleModelType
:
{ before(grammarAccess.getModelTypeRule()); }
	 ruleModelType
{ after(grammarAccess.getModelTypeRule()); } 
	 EOF 
;

// Rule ModelType
ruleModelType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelTypeAccess().getAlternatives()); }
		(rule__ModelType__Alternatives)
		{ after(grammarAccess.getModelTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleEntity
entryRuleSimpleEntity
:
{ before(grammarAccess.getSimpleEntityRule()); }
	 ruleSimpleEntity
{ after(grammarAccess.getSimpleEntityRule()); } 
	 EOF 
;

// Rule SimpleEntity
ruleSimpleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleEntityAccess().getGroup()); }
		(rule__SimpleEntity__Group__0)
		{ after(grammarAccess.getSimpleEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssociativeEntity
entryRuleAssociativeEntity
:
{ before(grammarAccess.getAssociativeEntityRule()); }
	 ruleAssociativeEntity
{ after(grammarAccess.getAssociativeEntityRule()); } 
	 EOF 
;

// Rule AssociativeEntity
ruleAssociativeEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssociativeEntityAccess().getGroup()); }
		(rule__AssociativeEntity__Group__0)
		{ after(grammarAccess.getAssociativeEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueType
entryRuleValueType
:
{ before(grammarAccess.getValueTypeRule()); }
	 ruleValueType
{ after(grammarAccess.getValueTypeRule()); } 
	 EOF 
;

// Rule ValueType
ruleValueType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueTypeAccess().getGroup()); }
		(rule__ValueType__Group__0)
		{ after(grammarAccess.getValueTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerable
entryRuleEnumerable
:
{ before(grammarAccess.getEnumerableRule()); }
	 ruleEnumerable
{ after(grammarAccess.getEnumerableRule()); } 
	 EOF 
;

// Rule Enumerable
ruleEnumerable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerableAccess().getGroup()); }
		(rule__Enumerable__Group__0)
		{ after(grammarAccess.getEnumerableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleLink
entryRuleSimpleLink
:
{ before(grammarAccess.getSimpleLinkRule()); }
	 ruleSimpleLink
{ after(grammarAccess.getSimpleLinkRule()); } 
	 EOF 
;

// Rule SimpleLink
ruleSimpleLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleLinkAccess().getGroup()); }
		(rule__SimpleLink__Group__0)
		{ after(grammarAccess.getSimpleLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelation
entryRuleRelation
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationAccess().getGroup()); }
		(rule__Relation__Group__0)
		{ after(grammarAccess.getRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefAttribute
entryRuleDefAttribute
:
{ before(grammarAccess.getDefAttributeRule()); }
	 ruleDefAttribute
{ after(grammarAccess.getDefAttributeRule()); } 
	 EOF 
;

// Rule DefAttribute
ruleDefAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefAttributeAccess().getAlternatives()); }
		(rule__DefAttribute__Alternatives)
		{ after(grammarAccess.getDefAttributeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefVariable
entryRuleDefVariable
:
{ before(grammarAccess.getDefVariableRule()); }
	 ruleDefVariable
{ after(grammarAccess.getDefVariableRule()); } 
	 EOF 
;

// Rule DefVariable
ruleDefVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefVariableAccess().getAlternatives()); }
		(rule__DefVariable__Alternatives)
		{ after(grammarAccess.getDefVariableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefIdAttribute
entryRuleDefIdAttribute
:
{ before(grammarAccess.getDefIdAttributeRule()); }
	 ruleDefIdAttribute
{ after(grammarAccess.getDefIdAttributeRule()); } 
	 EOF 
;

// Rule DefIdAttribute
ruleDefIdAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefIdAttributeAccess().getGroup()); }
		(rule__DefIdAttribute__Group__0)
		{ after(grammarAccess.getDefIdAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefAllModelTypeVariable
entryRuleDefAllModelTypeVariable
:
{ before(grammarAccess.getDefAllModelTypeVariableRule()); }
	 ruleDefAllModelTypeVariable
{ after(grammarAccess.getDefAllModelTypeVariableRule()); } 
	 EOF 
;

// Rule DefAllModelTypeVariable
ruleDefAllModelTypeVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefAllModelTypeVariableAccess().getGroup()); }
		(rule__DefAllModelTypeVariable__Group__0)
		{ after(grammarAccess.getDefAllModelTypeVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefSimpleVariable
entryRuleDefSimpleVariable
:
{ before(grammarAccess.getDefSimpleVariableRule()); }
	 ruleDefSimpleVariable
{ after(grammarAccess.getDefSimpleVariableRule()); } 
	 EOF 
;

// Rule DefSimpleVariable
ruleDefSimpleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefSimpleVariableAccess().getGroup()); }
		(rule__DefSimpleVariable__Group__0)
		{ after(grammarAccess.getDefSimpleVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefModelTypeVariable
entryRuleDefModelTypeVariable
:
{ before(grammarAccess.getDefModelTypeVariableRule()); }
	 ruleDefModelTypeVariable
{ after(grammarAccess.getDefModelTypeVariableRule()); } 
	 EOF 
;

// Rule DefModelTypeVariable
ruleDefModelTypeVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefModelTypeVariableAccess().getGroup()); }
		(rule__DefModelTypeVariable__Group__0)
		{ after(grammarAccess.getDefModelTypeVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefCollectionTypeAttribute
entryRuleDefCollectionTypeAttribute
:
{ before(grammarAccess.getDefCollectionTypeAttributeRule()); }
	 ruleDefCollectionTypeAttribute
{ after(grammarAccess.getDefCollectionTypeAttributeRule()); } 
	 EOF 
;

// Rule DefCollectionTypeAttribute
ruleDefCollectionTypeAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefCollectionTypeAttributeAccess().getAlternatives()); }
		(rule__DefCollectionTypeAttribute__Alternatives)
		{ after(grammarAccess.getDefCollectionTypeAttributeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefCollectionTypeVariable
entryRuleDefCollectionTypeVariable
:
{ before(grammarAccess.getDefCollectionTypeVariableRule()); }
	 ruleDefCollectionTypeVariable
{ after(grammarAccess.getDefCollectionTypeVariableRule()); } 
	 EOF 
;

// Rule DefCollectionTypeVariable
ruleDefCollectionTypeVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefCollectionTypeVariableAccess().getAlternatives()); }
		(rule__DefCollectionTypeVariable__Alternatives)
		{ after(grammarAccess.getDefCollectionTypeVariableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefModelModelTypeCollectionVariable
entryRuleDefModelModelTypeCollectionVariable
:
{ before(grammarAccess.getDefModelModelTypeCollectionVariableRule()); }
	 ruleDefModelModelTypeCollectionVariable
{ after(grammarAccess.getDefModelModelTypeCollectionVariableRule()); } 
	 EOF 
;

// Rule DefModelModelTypeCollectionVariable
ruleDefModelModelTypeCollectionVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefModelModelTypeCollectionVariableAccess().getGroup()); }
		(rule__DefModelModelTypeCollectionVariable__Group__0)
		{ after(grammarAccess.getDefModelModelTypeCollectionVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefModelSimpleTypeCollectionVariable
entryRuleDefModelSimpleTypeCollectionVariable
:
{ before(grammarAccess.getDefModelSimpleTypeCollectionVariableRule()); }
	 ruleDefModelSimpleTypeCollectionVariable
{ after(grammarAccess.getDefModelSimpleTypeCollectionVariableRule()); } 
	 EOF 
;

// Rule DefModelSimpleTypeCollectionVariable
ruleDefModelSimpleTypeCollectionVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefModelSimpleTypeCollectionVariableAccess().getGroup()); }
		(rule__DefModelSimpleTypeCollectionVariable__Group__0)
		{ after(grammarAccess.getDefModelSimpleTypeCollectionVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefLinkVariable
entryRuleDefLinkVariable
:
{ before(grammarAccess.getDefLinkVariableRule()); }
	 ruleDefLinkVariable
{ after(grammarAccess.getDefLinkVariableRule()); } 
	 EOF 
;

// Rule DefLinkVariable
ruleDefLinkVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefLinkVariableAccess().getGroup()); }
		(rule__DefLinkVariable__Group__0)
		{ after(grammarAccess.getDefLinkVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethod
entryRuleMethod
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodAccess().getAlternatives()); }
		(rule__Method__Alternatives)
		{ after(grammarAccess.getMethodAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodSimpleReturn
entryRuleMethodSimpleReturn
:
{ before(grammarAccess.getMethodSimpleReturnRule()); }
	 ruleMethodSimpleReturn
{ after(grammarAccess.getMethodSimpleReturnRule()); } 
	 EOF 
;

// Rule MethodSimpleReturn
ruleMethodSimpleReturn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodSimpleReturnAccess().getGroup()); }
		(rule__MethodSimpleReturn__Group__0)
		{ after(grammarAccess.getMethodSimpleReturnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodCollectionReturn
entryRuleMethodCollectionReturn
:
{ before(grammarAccess.getMethodCollectionReturnRule()); }
	 ruleMethodCollectionReturn
{ after(grammarAccess.getMethodCollectionReturnRule()); } 
	 EOF 
;

// Rule MethodCollectionReturn
ruleMethodCollectionReturn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodCollectionReturnAccess().getGroup()); }
		(rule__MethodCollectionReturn__Group__0)
		{ after(grammarAccess.getMethodCollectionReturnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodAllModelReturn
entryRuleMethodAllModelReturn
:
{ before(grammarAccess.getMethodAllModelReturnRule()); }
	 ruleMethodAllModelReturn
{ after(grammarAccess.getMethodAllModelReturnRule()); } 
	 EOF 
;

// Rule MethodAllModelReturn
ruleMethodAllModelReturn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodAllModelReturnAccess().getGroup()); }
		(rule__MethodAllModelReturn__Group__0)
		{ after(grammarAccess.getMethodAllModelReturnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAllModelTypeCollection
entryRuleAllModelTypeCollection
:
{ before(grammarAccess.getAllModelTypeCollectionRule()); }
	 ruleAllModelTypeCollection
{ after(grammarAccess.getAllModelTypeCollectionRule()); } 
	 EOF 
;

// Rule AllModelTypeCollection
ruleAllModelTypeCollection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAllModelTypeCollectionAccess().getGroup()); }
		(rule__AllModelTypeCollection__Group__0)
		{ after(grammarAccess.getAllModelTypeCollectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelTypeCollection
entryRuleModelTypeCollection
:
{ before(grammarAccess.getModelTypeCollectionRule()); }
	 ruleModelTypeCollection
{ after(grammarAccess.getModelTypeCollectionRule()); } 
	 EOF 
;

// Rule ModelTypeCollection
ruleModelTypeCollection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelTypeCollectionAccess().getGroup()); }
		(rule__ModelTypeCollection__Group__0)
		{ after(grammarAccess.getModelTypeCollectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleTypeCollection
entryRuleSimpleTypeCollection
:
{ before(grammarAccess.getSimpleTypeCollectionRule()); }
	 ruleSimpleTypeCollection
{ after(grammarAccess.getSimpleTypeCollectionRule()); } 
	 EOF 
;

// Rule SimpleTypeCollection
ruleSimpleTypeCollection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleTypeCollectionAccess().getGroup()); }
		(rule__SimpleTypeCollection__Group__0)
		{ after(grammarAccess.getSimpleTypeCollectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollectionReturnType
entryRuleCollectionReturnType
:
{ before(grammarAccess.getCollectionReturnTypeRule()); }
	 ruleCollectionReturnType
{ after(grammarAccess.getCollectionReturnTypeRule()); } 
	 EOF 
;

// Rule CollectionReturnType
ruleCollectionReturnType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionReturnTypeAccess().getAlternatives()); }
		(rule__CollectionReturnType__Alternatives)
		{ after(grammarAccess.getCollectionReturnTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleReturnType
entryRuleSimpleReturnType
:
{ before(grammarAccess.getSimpleReturnTypeRule()); }
	 ruleSimpleReturnType
{ after(grammarAccess.getSimpleReturnTypeRule()); } 
	 EOF 
;

// Rule SimpleReturnType
ruleSimpleReturnType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleReturnTypeAccess().getAlternatives()); }
		(rule__SimpleReturnType__Alternatives)
		{ after(grammarAccess.getSimpleReturnTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicType
entryRuleBasicType
:
{ before(grammarAccess.getBasicTypeRule()); }
	 ruleBasicType
{ after(grammarAccess.getBasicTypeRule()); } 
	 EOF 
;

// Rule BasicType
ruleBasicType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicTypeAccess().getAlternatives()); }
		(rule__BasicType__Alternatives)
		{ after(grammarAccess.getBasicTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexType
entryRuleComplexType
:
{ before(grammarAccess.getComplexTypeRule()); }
	 ruleComplexType
{ after(grammarAccess.getComplexTypeRule()); } 
	 EOF 
;

// Rule ComplexType
ruleComplexType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexTypeAccess().getDATETerminalRuleCall()); }
		RULE_DATE
		{ after(grammarAccess.getComplexTypeAccess().getDATETerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicity
entryRuleMultiplicity
:
{ before(grammarAccess.getMultiplicityRule()); }
	 ruleMultiplicity
{ after(grammarAccess.getMultiplicityRule()); } 
	 EOF 
;

// Rule Multiplicity
ruleMultiplicity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicityAccess().getAlternatives()); }
		(rule__Multiplicity__Alternatives)
		{ after(grammarAccess.getMultiplicityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getAllModelTypeParserRuleCall_0()); }
		ruleAllModelType
		{ after(grammarAccess.getElementAccess().getAllModelTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getSimpleLinkParserRuleCall_1()); }
		ruleSimpleLink
		{ after(grammarAccess.getElementAccess().getSimpleLinkParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllModelType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAllModelTypeAccess().getEntityParserRuleCall_0()); }
		ruleEntity
		{ after(grammarAccess.getAllModelTypeAccess().getEntityParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAllModelTypeAccess().getModelTypeParserRuleCall_1()); }
		ruleModelType
		{ after(grammarAccess.getAllModelTypeAccess().getModelTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getSimpleEntityParserRuleCall_0()); }
		ruleSimpleEntity
		{ after(grammarAccess.getEntityAccess().getSimpleEntityParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntityAccess().getAssociativeEntityParserRuleCall_1()); }
		ruleAssociativeEntity
		{ after(grammarAccess.getEntityAccess().getAssociativeEntityParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelTypeAccess().getEnumerableParserRuleCall_0()); }
		ruleEnumerable
		{ after(grammarAccess.getModelTypeAccess().getEnumerableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelTypeAccess().getValueTypeParserRuleCall_1()); }
		ruleValueType
		{ after(grammarAccess.getModelTypeAccess().getValueTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__NavigableAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getNavigableNavigableKeyword_3_0_0()); }
		'navigable'
		{ after(grammarAccess.getRelationAccess().getNavigableNavigableKeyword_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getNavigableNonNavigableKeyword_3_0_1()); }
		'non-navigable'
		{ after(grammarAccess.getRelationAccess().getNavigableNonNavigableKeyword_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefAttribute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefAttributeAccess().getGroup_0()); }
		(rule__DefAttribute__Group_0__0)
		{ after(grammarAccess.getDefAttributeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefAttributeAccess().getDefCollectionTypeAttributeParserRuleCall_1()); }
		ruleDefCollectionTypeAttribute
		{ after(grammarAccess.getDefAttributeAccess().getDefCollectionTypeAttributeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefAttribute__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefAttributeAccess().getDefSimpleVariableParserRuleCall_0_0_0()); }
		ruleDefSimpleVariable
		{ after(grammarAccess.getDefAttributeAccess().getDefSimpleVariableParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefAttributeAccess().getDefModelTypeVariableParserRuleCall_0_0_1()); }
		ruleDefModelTypeVariable
		{ after(grammarAccess.getDefAttributeAccess().getDefModelTypeVariableParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefAttribute__NullableAlternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefAttributeAccess().getNullableNullableKeyword_0_1_0_0()); }
		'nullable'
		{ after(grammarAccess.getDefAttributeAccess().getNullableNullableKeyword_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefAttributeAccess().getNullableNonNullableKeyword_0_1_0_1()); }
		'non-nullable'
		{ after(grammarAccess.getDefAttributeAccess().getNullableNonNullableKeyword_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefVariable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefVariableAccess().getDefSimpleVariableParserRuleCall_0()); }
		ruleDefSimpleVariable
		{ after(grammarAccess.getDefVariableAccess().getDefSimpleVariableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefVariableAccess().getDefAllModelTypeVariableParserRuleCall_1()); }
		ruleDefAllModelTypeVariable
		{ after(grammarAccess.getDefVariableAccess().getDefAllModelTypeVariableParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDefVariableAccess().getDefCollectionTypeVariableParserRuleCall_2()); }
		ruleDefCollectionTypeVariable
		{ after(grammarAccess.getDefVariableAccess().getDefCollectionTypeVariableParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefIdAttribute__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefIdAttributeAccess().getDefSimpleVariableParserRuleCall_0_0()); }
		ruleDefSimpleVariable
		{ after(grammarAccess.getDefIdAttributeAccess().getDefSimpleVariableParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefIdAttributeAccess().getDefModelTypeVariableParserRuleCall_0_1()); }
		ruleDefModelTypeVariable
		{ after(grammarAccess.getDefIdAttributeAccess().getDefModelTypeVariableParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getDefIdAttributeAccess().getDefLinkVariableParserRuleCall_0_2()); }
		ruleDefLinkVariable
		{ after(grammarAccess.getDefIdAttributeAccess().getDefLinkVariableParserRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCollectionTypeAttribute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefCollectionTypeAttributeAccess().getDefModelModelTypeCollectionVariableParserRuleCall_0()); }
		ruleDefModelModelTypeCollectionVariable
		{ after(grammarAccess.getDefCollectionTypeAttributeAccess().getDefModelModelTypeCollectionVariableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefCollectionTypeAttributeAccess().getDefModelSimpleTypeCollectionVariableParserRuleCall_1()); }
		ruleDefModelSimpleTypeCollectionVariable
		{ after(grammarAccess.getDefCollectionTypeAttributeAccess().getDefModelSimpleTypeCollectionVariableParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCollectionTypeVariable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefCollectionTypeVariableAccess().getGroup_0()); }
		(rule__DefCollectionTypeVariable__Group_0__0)
		{ after(grammarAccess.getDefCollectionTypeVariableAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefCollectionTypeVariableAccess().getGroup_1()); }
		(rule__DefCollectionTypeVariable__Group_1__0)
		{ after(grammarAccess.getDefCollectionTypeVariableAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getMethodSimpleReturnParserRuleCall_0()); }
		ruleMethodSimpleReturn
		{ after(grammarAccess.getMethodAccess().getMethodSimpleReturnParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodAccess().getMethodCollectionReturnParserRuleCall_1()); }
		ruleMethodCollectionReturn
		{ after(grammarAccess.getMethodAccess().getMethodCollectionReturnParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getMethodAccess().getMethodAllModelReturnParserRuleCall_2()); }
		ruleMethodAllModelReturn
		{ after(grammarAccess.getMethodAccess().getMethodAllModelReturnParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllModelTypeCollection__CollectionAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAllModelTypeCollectionAccess().getCollectionLISTTerminalRuleCall_0_0_0()); }
		RULE_LIST
		{ after(grammarAccess.getAllModelTypeCollectionAccess().getCollectionLISTTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAllModelTypeCollectionAccess().getCollectionSETTerminalRuleCall_0_0_1()); }
		RULE_SET
		{ after(grammarAccess.getAllModelTypeCollectionAccess().getCollectionSETTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelTypeCollection__CollectionAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelTypeCollectionAccess().getCollectionLISTTerminalRuleCall_0_0_0()); }
		RULE_LIST
		{ after(grammarAccess.getModelTypeCollectionAccess().getCollectionLISTTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelTypeCollectionAccess().getCollectionSETTerminalRuleCall_0_0_1()); }
		RULE_SET
		{ after(grammarAccess.getModelTypeCollectionAccess().getCollectionSETTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeCollection__CollectionAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleTypeCollectionAccess().getCollectionLISTTerminalRuleCall_0_0_0()); }
		RULE_LIST
		{ after(grammarAccess.getSimpleTypeCollectionAccess().getCollectionLISTTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleTypeCollectionAccess().getCollectionSETTerminalRuleCall_0_0_1()); }
		RULE_SET
		{ after(grammarAccess.getSimpleTypeCollectionAccess().getCollectionSETTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionReturnType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionReturnTypeAccess().getAllModelTypeCollectionParserRuleCall_0()); }
		ruleAllModelTypeCollection
		{ after(grammarAccess.getCollectionReturnTypeAccess().getAllModelTypeCollectionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionReturnTypeAccess().getSimpleTypeCollectionParserRuleCall_1()); }
		ruleSimpleTypeCollection
		{ after(grammarAccess.getCollectionReturnTypeAccess().getSimpleTypeCollectionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleReturnType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleReturnTypeAccess().getTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getSimpleReturnTypeAccess().getTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleReturnTypeAccess().getVOIDTerminalRuleCall_1()); }
		RULE_VOID
		{ after(grammarAccess.getSimpleReturnTypeAccess().getVOIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getBasicTypeParserRuleCall_0()); }
		ruleBasicType
		{ after(grammarAccess.getTypeAccess().getBasicTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getComplexTypeParserRuleCall_1()); }
		ruleComplexType
		{ after(grammarAccess.getTypeAccess().getComplexTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getTYPE_INTTerminalRuleCall_0()); }
		RULE_TYPE_INT
		{ after(grammarAccess.getBasicTypeAccess().getTYPE_INTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getTYPE_DOUBLETerminalRuleCall_1()); }
		RULE_TYPE_DOUBLE
		{ after(grammarAccess.getBasicTypeAccess().getTYPE_DOUBLETerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getTYPE_FLOATTerminalRuleCall_2()); }
		RULE_TYPE_FLOAT
		{ after(grammarAccess.getBasicTypeAccess().getTYPE_FLOATTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getTYPE_LONGTerminalRuleCall_3()); }
		RULE_TYPE_LONG
		{ after(grammarAccess.getBasicTypeAccess().getTYPE_LONGTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getTYPE_CHARTerminalRuleCall_4()); }
		RULE_TYPE_CHAR
		{ after(grammarAccess.getBasicTypeAccess().getTYPE_CHARTerminalRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getTYPE_STRINGTerminalRuleCall_5()); }
		RULE_TYPE_STRING
		{ after(grammarAccess.getBasicTypeAccess().getTYPE_STRINGTerminalRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getTYPE_BOOLEANTerminalRuleCall_6()); }
		RULE_TYPE_BOOLEAN
		{ after(grammarAccess.getBasicTypeAccess().getTYPE_BOOLEANTerminalRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityAccess().getONETerminalRuleCall_0()); }
		RULE_ONE
		{ after(grammarAccess.getMultiplicityAccess().getONETerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicityAccess().getMANYTerminalRuleCall_1()); }
		RULE_MANY
		{ after(grammarAccess.getMultiplicityAccess().getMANYTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicityAccess().getONE_ONETerminalRuleCall_2()); }
		RULE_ONE_ONE
		{ after(grammarAccess.getMultiplicityAccess().getONE_ONETerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__0__Impl
	rule__SimpleEntity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getEntityKeyword_0()); }
	'Entity'
	{ after(grammarAccess.getSimpleEntityAccess().getEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__1__Impl
	rule__SimpleEntity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getImplementationAssignment_1()); }
	(rule__SimpleEntity__ImplementationAssignment_1)?
	{ after(grammarAccess.getSimpleEntityAccess().getImplementationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__2__Impl
	rule__SimpleEntity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getNameAssignment_2()); }
	(rule__SimpleEntity__NameAssignment_2)
	{ after(grammarAccess.getSimpleEntityAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__3__Impl
	rule__SimpleEntity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getGroup_3()); }
	(rule__SimpleEntity__Group_3__0)?
	{ after(grammarAccess.getSimpleEntityAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__4__Impl
	rule__SimpleEntity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getSimpleEntityAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__5__Impl
	rule__SimpleEntity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getAttributesIdAssignment_5()); }
	(rule__SimpleEntity__AttributesIdAssignment_5)*
	{ after(grammarAccess.getSimpleEntityAccess().getAttributesIdAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__6__Impl
	rule__SimpleEntity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getAttributesAssignment_6()); }
	(rule__SimpleEntity__AttributesAssignment_6)*
	{ after(grammarAccess.getSimpleEntityAccess().getAttributesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__7__Impl
	rule__SimpleEntity__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getMethodsAssignment_7()); }
	(rule__SimpleEntity__MethodsAssignment_7)*
	{ after(grammarAccess.getSimpleEntityAccess().getMethodsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getSimpleEntityAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleEntity__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group_3__0__Impl
	rule__SimpleEntity__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getExtendsKeyword_3_0()); }
	'extends'
	{ after(grammarAccess.getSimpleEntityAccess().getExtendsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getSuperClassAssignment_3_1()); }
	(rule__SimpleEntity__SuperClassAssignment_3_1)
	{ after(grammarAccess.getSimpleEntityAccess().getSuperClassAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociativeEntity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociativeEntity__Group__0__Impl
	rule__AssociativeEntity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociativeEntityAccess().getEntityLinkKeyword_0()); }
	'EntityLink'
	{ after(grammarAccess.getAssociativeEntityAccess().getEntityLinkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociativeEntity__Group__1__Impl
	rule__AssociativeEntity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociativeEntityAccess().getNameAssignment_1()); }
	(rule__AssociativeEntity__NameAssignment_1)
	{ after(grammarAccess.getAssociativeEntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociativeEntity__Group__2__Impl
	rule__AssociativeEntity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociativeEntityAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAssociativeEntityAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociativeEntity__Group__3__Impl
	rule__AssociativeEntity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociativeEntityAccess().getRelationsAssignment_3()); }
	(rule__AssociativeEntity__RelationsAssignment_3)
	{ after(grammarAccess.getAssociativeEntityAccess().getRelationsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociativeEntity__Group__4__Impl
	rule__AssociativeEntity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociativeEntityAccess().getRelationsAssignment_4()); }
	(rule__AssociativeEntity__RelationsAssignment_4)
	{ after(grammarAccess.getAssociativeEntityAccess().getRelationsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociativeEntity__Group__5__Impl
	rule__AssociativeEntity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociativeEntityAccess().getAttributesAssignment_5()); }
	(rule__AssociativeEntity__AttributesAssignment_5)*
	{ after(grammarAccess.getAssociativeEntityAccess().getAttributesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociativeEntity__Group__6__Impl
	rule__AssociativeEntity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociativeEntityAccess().getMethodsAssignment_6()); }
	(rule__AssociativeEntity__MethodsAssignment_6)*
	{ after(grammarAccess.getAssociativeEntityAccess().getMethodsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociativeEntity__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociativeEntityAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getAssociativeEntityAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueType__Group__0__Impl
	rule__ValueType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueTypeAccess().getValueTypeKeyword_0()); }
	'ValueType'
	{ after(grammarAccess.getValueTypeAccess().getValueTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueType__Group__1__Impl
	rule__ValueType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueTypeAccess().getNameAssignment_1()); }
	(rule__ValueType__NameAssignment_1)
	{ after(grammarAccess.getValueTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueType__Group__2__Impl
	rule__ValueType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueTypeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getValueTypeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueType__Group__3__Impl
	rule__ValueType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getValueTypeAccess().getAttributesAssignment_3()); }
		(rule__ValueType__AttributesAssignment_3)
		{ after(grammarAccess.getValueTypeAccess().getAttributesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getValueTypeAccess().getAttributesAssignment_3()); }
		(rule__ValueType__AttributesAssignment_3)*
		{ after(grammarAccess.getValueTypeAccess().getAttributesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueTypeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getValueTypeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enumerable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerable__Group__0__Impl
	rule__Enumerable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerableAccess().getEnumerableKeyword_0()); }
	'Enumerable'
	{ after(grammarAccess.getEnumerableAccess().getEnumerableKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerable__Group__1__Impl
	rule__Enumerable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerableAccess().getNameAssignment_1()); }
	(rule__Enumerable__NameAssignment_1)
	{ after(grammarAccess.getEnumerableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerable__Group__2__Impl
	rule__Enumerable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerableAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getEnumerableAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerable__Group__3__Impl
	rule__Enumerable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEnumerableAccess().getEnumsAssignment_3()); }
		(rule__Enumerable__EnumsAssignment_3)
		{ after(grammarAccess.getEnumerableAccess().getEnumsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getEnumerableAccess().getEnumsAssignment_3()); }
		(rule__Enumerable__EnumsAssignment_3)*
		{ after(grammarAccess.getEnumerableAccess().getEnumsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerableAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getEnumerableAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleLink__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleLink__Group__0__Impl
	rule__SimpleLink__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleLink__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleLinkAccess().getLinkKeyword_0()); }
	'Link'
	{ after(grammarAccess.getSimpleLinkAccess().getLinkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleLink__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleLink__Group__1__Impl
	rule__SimpleLink__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleLink__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleLinkAccess().getNameAssignment_1()); }
	(rule__SimpleLink__NameAssignment_1)
	{ after(grammarAccess.getSimpleLinkAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleLink__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleLink__Group__2__Impl
	rule__SimpleLink__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleLink__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleLinkAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSimpleLinkAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleLink__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleLink__Group__3__Impl
	rule__SimpleLink__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleLink__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleLinkAccess().getRelationsAssignment_3()); }
	(rule__SimpleLink__RelationsAssignment_3)
	{ after(grammarAccess.getSimpleLinkAccess().getRelationsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleLink__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleLink__Group__4__Impl
	rule__SimpleLink__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleLink__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleLinkAccess().getRelationsAssignment_4()); }
	(rule__SimpleLink__RelationsAssignment_4)
	{ after(grammarAccess.getSimpleLinkAccess().getRelationsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleLink__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleLink__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleLink__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleLinkAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getSimpleLinkAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getMultiplicityAssignment_0()); }
	(rule__Relation__MultiplicityAssignment_0)
	{ after(grammarAccess.getRelationAccess().getMultiplicityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__1__Impl
	rule__Relation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getTypeAssignment_1()); }
	(rule__Relation__TypeAssignment_1)
	{ after(grammarAccess.getRelationAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__2__Impl
	rule__Relation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getNameAssignment_2()); }
	(rule__Relation__NameAssignment_2)
	{ after(grammarAccess.getRelationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getNavigableAssignment_3()); }
	(rule__Relation__NavigableAssignment_3)?
	{ after(grammarAccess.getRelationAccess().getNavigableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefAttribute__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefAttribute__Group_0__0__Impl
	rule__DefAttribute__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefAttribute__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefAttributeAccess().getAlternatives_0_0()); }
	(rule__DefAttribute__Alternatives_0_0)
	{ after(grammarAccess.getDefAttributeAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefAttribute__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefAttribute__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefAttribute__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefAttributeAccess().getNullableAssignment_0_1()); }
	(rule__DefAttribute__NullableAssignment_0_1)?
	{ after(grammarAccess.getDefAttributeAccess().getNullableAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefIdAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefIdAttribute__Group__0__Impl
	rule__DefIdAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefIdAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefIdAttributeAccess().getAlternatives_0()); }
	(rule__DefIdAttribute__Alternatives_0)
	{ after(grammarAccess.getDefIdAttributeAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefIdAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefIdAttribute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefIdAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefIdAttributeAccess().getIdKeyword_1()); }
	'id'
	{ after(grammarAccess.getDefIdAttributeAccess().getIdKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefAllModelTypeVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefAllModelTypeVariable__Group__0__Impl
	rule__DefAllModelTypeVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefAllModelTypeVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefAllModelTypeVariableAccess().getTypeAssignment_0()); }
	(rule__DefAllModelTypeVariable__TypeAssignment_0)
	{ after(grammarAccess.getDefAllModelTypeVariableAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefAllModelTypeVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefAllModelTypeVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefAllModelTypeVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefAllModelTypeVariableAccess().getNameAssignment_1()); }
	(rule__DefAllModelTypeVariable__NameAssignment_1)
	{ after(grammarAccess.getDefAllModelTypeVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefSimpleVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefSimpleVariable__Group__0__Impl
	rule__DefSimpleVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefSimpleVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefSimpleVariableAccess().getTypeAssignment_0()); }
	(rule__DefSimpleVariable__TypeAssignment_0)
	{ after(grammarAccess.getDefSimpleVariableAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefSimpleVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefSimpleVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefSimpleVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefSimpleVariableAccess().getNameAssignment_1()); }
	(rule__DefSimpleVariable__NameAssignment_1)
	{ after(grammarAccess.getDefSimpleVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefModelTypeVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefModelTypeVariable__Group__0__Impl
	rule__DefModelTypeVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefModelTypeVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefModelTypeVariableAccess().getTypeAssignment_0()); }
	(rule__DefModelTypeVariable__TypeAssignment_0)
	{ after(grammarAccess.getDefModelTypeVariableAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefModelTypeVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefModelTypeVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefModelTypeVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefModelTypeVariableAccess().getNameAssignment_1()); }
	(rule__DefModelTypeVariable__NameAssignment_1)
	{ after(grammarAccess.getDefModelTypeVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefCollectionTypeVariable__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefCollectionTypeVariable__Group_0__0__Impl
	rule__DefCollectionTypeVariable__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCollectionTypeVariable__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefCollectionTypeVariableAccess().getTypeAssignment_0_0()); }
	(rule__DefCollectionTypeVariable__TypeAssignment_0_0)
	{ after(grammarAccess.getDefCollectionTypeVariableAccess().getTypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCollectionTypeVariable__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefCollectionTypeVariable__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCollectionTypeVariable__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefCollectionTypeVariableAccess().getNameAssignment_0_1()); }
	(rule__DefCollectionTypeVariable__NameAssignment_0_1)
	{ after(grammarAccess.getDefCollectionTypeVariableAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefCollectionTypeVariable__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefCollectionTypeVariable__Group_1__0__Impl
	rule__DefCollectionTypeVariable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCollectionTypeVariable__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefCollectionTypeVariableAccess().getTypeAssignment_1_0()); }
	(rule__DefCollectionTypeVariable__TypeAssignment_1_0)
	{ after(grammarAccess.getDefCollectionTypeVariableAccess().getTypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCollectionTypeVariable__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefCollectionTypeVariable__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCollectionTypeVariable__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefCollectionTypeVariableAccess().getNameAssignment_1_1()); }
	(rule__DefCollectionTypeVariable__NameAssignment_1_1)
	{ after(grammarAccess.getDefCollectionTypeVariableAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefModelModelTypeCollectionVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefModelModelTypeCollectionVariable__Group__0__Impl
	rule__DefModelModelTypeCollectionVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefModelModelTypeCollectionVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefModelModelTypeCollectionVariableAccess().getTypeAssignment_0()); }
	(rule__DefModelModelTypeCollectionVariable__TypeAssignment_0)
	{ after(grammarAccess.getDefModelModelTypeCollectionVariableAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefModelModelTypeCollectionVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefModelModelTypeCollectionVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefModelModelTypeCollectionVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefModelModelTypeCollectionVariableAccess().getNameAssignment_1()); }
	(rule__DefModelModelTypeCollectionVariable__NameAssignment_1)
	{ after(grammarAccess.getDefModelModelTypeCollectionVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefModelSimpleTypeCollectionVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefModelSimpleTypeCollectionVariable__Group__0__Impl
	rule__DefModelSimpleTypeCollectionVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefModelSimpleTypeCollectionVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefModelSimpleTypeCollectionVariableAccess().getTypeAssignment_0()); }
	(rule__DefModelSimpleTypeCollectionVariable__TypeAssignment_0)
	{ after(grammarAccess.getDefModelSimpleTypeCollectionVariableAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefModelSimpleTypeCollectionVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefModelSimpleTypeCollectionVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefModelSimpleTypeCollectionVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefModelSimpleTypeCollectionVariableAccess().getNameAssignment_1()); }
	(rule__DefModelSimpleTypeCollectionVariable__NameAssignment_1)
	{ after(grammarAccess.getDefModelSimpleTypeCollectionVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefLinkVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefLinkVariable__Group__0__Impl
	rule__DefLinkVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefLinkVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefLinkVariableAccess().getLinkKeyword_0()); }
	'Link.'
	{ after(grammarAccess.getDefLinkVariableAccess().getLinkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefLinkVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefLinkVariable__Group__1__Impl
	rule__DefLinkVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefLinkVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefLinkVariableAccess().getTypeAssignment_1()); }
	(rule__DefLinkVariable__TypeAssignment_1)
	{ after(grammarAccess.getDefLinkVariableAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefLinkVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefLinkVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefLinkVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefLinkVariableAccess().getNameAssignment_2()); }
	(rule__DefLinkVariable__NameAssignment_2)
	{ after(grammarAccess.getDefLinkVariableAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodSimpleReturn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSimpleReturn__Group__0__Impl
	rule__MethodSimpleReturn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSimpleReturnAccess().getReturnTypeAssignment_0()); }
	(rule__MethodSimpleReturn__ReturnTypeAssignment_0)
	{ after(grammarAccess.getMethodSimpleReturnAccess().getReturnTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSimpleReturn__Group__1__Impl
	rule__MethodSimpleReturn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSimpleReturnAccess().getNameAssignment_1()); }
	(rule__MethodSimpleReturn__NameAssignment_1)
	{ after(grammarAccess.getMethodSimpleReturnAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSimpleReturn__Group__2__Impl
	rule__MethodSimpleReturn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSimpleReturnAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getMethodSimpleReturnAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSimpleReturn__Group__3__Impl
	rule__MethodSimpleReturn__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSimpleReturnAccess().getGroup_3()); }
	(rule__MethodSimpleReturn__Group_3__0)?
	{ after(grammarAccess.getMethodSimpleReturnAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSimpleReturn__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSimpleReturnAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getMethodSimpleReturnAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodSimpleReturn__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSimpleReturn__Group_3__0__Impl
	rule__MethodSimpleReturn__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSimpleReturnAccess().getParametersAssignment_3_0()); }
	(rule__MethodSimpleReturn__ParametersAssignment_3_0)
	{ after(grammarAccess.getMethodSimpleReturnAccess().getParametersAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSimpleReturn__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSimpleReturnAccess().getGroup_3_1()); }
	(rule__MethodSimpleReturn__Group_3_1__0)*
	{ after(grammarAccess.getMethodSimpleReturnAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodSimpleReturn__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSimpleReturn__Group_3_1__0__Impl
	rule__MethodSimpleReturn__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSimpleReturnAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getMethodSimpleReturnAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSimpleReturn__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSimpleReturnAccess().getParametersAssignment_3_1_1()); }
	(rule__MethodSimpleReturn__ParametersAssignment_3_1_1)
	{ after(grammarAccess.getMethodSimpleReturnAccess().getParametersAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCollectionReturn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCollectionReturn__Group__0__Impl
	rule__MethodCollectionReturn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCollectionReturnAccess().getReturnTypeAssignment_0()); }
	(rule__MethodCollectionReturn__ReturnTypeAssignment_0)
	{ after(grammarAccess.getMethodCollectionReturnAccess().getReturnTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCollectionReturn__Group__1__Impl
	rule__MethodCollectionReturn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCollectionReturnAccess().getNameAssignment_1()); }
	(rule__MethodCollectionReturn__NameAssignment_1)
	{ after(grammarAccess.getMethodCollectionReturnAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCollectionReturn__Group__2__Impl
	rule__MethodCollectionReturn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCollectionReturnAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getMethodCollectionReturnAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCollectionReturn__Group__3__Impl
	rule__MethodCollectionReturn__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCollectionReturnAccess().getGroup_3()); }
	(rule__MethodCollectionReturn__Group_3__0)?
	{ after(grammarAccess.getMethodCollectionReturnAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCollectionReturn__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCollectionReturnAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getMethodCollectionReturnAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCollectionReturn__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCollectionReturn__Group_3__0__Impl
	rule__MethodCollectionReturn__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCollectionReturnAccess().getParametersAssignment_3_0()); }
	(rule__MethodCollectionReturn__ParametersAssignment_3_0)
	{ after(grammarAccess.getMethodCollectionReturnAccess().getParametersAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCollectionReturn__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCollectionReturnAccess().getGroup_3_1()); }
	(rule__MethodCollectionReturn__Group_3_1__0)*
	{ after(grammarAccess.getMethodCollectionReturnAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCollectionReturn__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCollectionReturn__Group_3_1__0__Impl
	rule__MethodCollectionReturn__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCollectionReturnAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getMethodCollectionReturnAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCollectionReturn__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCollectionReturnAccess().getParametersAssignment_3_1_1()); }
	(rule__MethodCollectionReturn__ParametersAssignment_3_1_1)
	{ after(grammarAccess.getMethodCollectionReturnAccess().getParametersAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodAllModelReturn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodAllModelReturn__Group__0__Impl
	rule__MethodAllModelReturn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAllModelReturnAccess().getReturnTypeAssignment_0()); }
	(rule__MethodAllModelReturn__ReturnTypeAssignment_0)
	{ after(grammarAccess.getMethodAllModelReturnAccess().getReturnTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodAllModelReturn__Group__1__Impl
	rule__MethodAllModelReturn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAllModelReturnAccess().getNameAssignment_1()); }
	(rule__MethodAllModelReturn__NameAssignment_1)
	{ after(grammarAccess.getMethodAllModelReturnAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodAllModelReturn__Group__2__Impl
	rule__MethodAllModelReturn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAllModelReturnAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getMethodAllModelReturnAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodAllModelReturn__Group__3__Impl
	rule__MethodAllModelReturn__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAllModelReturnAccess().getGroup_3()); }
	(rule__MethodAllModelReturn__Group_3__0)?
	{ after(grammarAccess.getMethodAllModelReturnAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodAllModelReturn__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAllModelReturnAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getMethodAllModelReturnAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodAllModelReturn__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodAllModelReturn__Group_3__0__Impl
	rule__MethodAllModelReturn__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAllModelReturnAccess().getParametersAssignment_3_0()); }
	(rule__MethodAllModelReturn__ParametersAssignment_3_0)
	{ after(grammarAccess.getMethodAllModelReturnAccess().getParametersAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodAllModelReturn__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAllModelReturnAccess().getGroup_3_1()); }
	(rule__MethodAllModelReturn__Group_3_1__0)*
	{ after(grammarAccess.getMethodAllModelReturnAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodAllModelReturn__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodAllModelReturn__Group_3_1__0__Impl
	rule__MethodAllModelReturn__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAllModelReturnAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getMethodAllModelReturnAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodAllModelReturn__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAllModelReturnAccess().getParametersAssignment_3_1_1()); }
	(rule__MethodAllModelReturn__ParametersAssignment_3_1_1)
	{ after(grammarAccess.getMethodAllModelReturnAccess().getParametersAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AllModelTypeCollection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllModelTypeCollection__Group__0__Impl
	rule__AllModelTypeCollection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AllModelTypeCollection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllModelTypeCollectionAccess().getCollectionAssignment_0()); }
	(rule__AllModelTypeCollection__CollectionAssignment_0)
	{ after(grammarAccess.getAllModelTypeCollectionAccess().getCollectionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllModelTypeCollection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllModelTypeCollection__Group__1__Impl
	rule__AllModelTypeCollection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AllModelTypeCollection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllModelTypeCollectionAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getAllModelTypeCollectionAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllModelTypeCollection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllModelTypeCollection__Group__2__Impl
	rule__AllModelTypeCollection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AllModelTypeCollection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllModelTypeCollectionAccess().getTypeAssignment_2()); }
	(rule__AllModelTypeCollection__TypeAssignment_2)
	{ after(grammarAccess.getAllModelTypeCollectionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllModelTypeCollection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllModelTypeCollection__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AllModelTypeCollection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllModelTypeCollectionAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getAllModelTypeCollectionAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelTypeCollection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelTypeCollection__Group__0__Impl
	rule__ModelTypeCollection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelTypeCollection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeCollectionAccess().getCollectionAssignment_0()); }
	(rule__ModelTypeCollection__CollectionAssignment_0)
	{ after(grammarAccess.getModelTypeCollectionAccess().getCollectionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelTypeCollection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelTypeCollection__Group__1__Impl
	rule__ModelTypeCollection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelTypeCollection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeCollectionAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getModelTypeCollectionAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelTypeCollection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelTypeCollection__Group__2__Impl
	rule__ModelTypeCollection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelTypeCollection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeCollectionAccess().getTypeAssignment_2()); }
	(rule__ModelTypeCollection__TypeAssignment_2)
	{ after(grammarAccess.getModelTypeCollectionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelTypeCollection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelTypeCollection__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelTypeCollection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeCollectionAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getModelTypeCollectionAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleTypeCollection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleTypeCollection__Group__0__Impl
	rule__SimpleTypeCollection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeCollection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleTypeCollectionAccess().getCollectionAssignment_0()); }
	(rule__SimpleTypeCollection__CollectionAssignment_0)
	{ after(grammarAccess.getSimpleTypeCollectionAccess().getCollectionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeCollection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleTypeCollection__Group__1__Impl
	rule__SimpleTypeCollection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeCollection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleTypeCollectionAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getSimpleTypeCollectionAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeCollection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleTypeCollection__Group__2__Impl
	rule__SimpleTypeCollection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeCollection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleTypeCollectionAccess().getTypeAssignment_2()); }
	(rule__SimpleTypeCollection__TypeAssignment_2)
	{ after(grammarAccess.getSimpleTypeCollectionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeCollection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleTypeCollection__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeCollection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleTypeCollectionAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getSimpleTypeCollectionAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsElementParserRuleCall_0()); }
		ruleElement
		{ after(grammarAccess.getModelAccess().getElementsElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__ImplementationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleEntityAccess().getImplementationAbstractKeyword_1_0()); }
		(
			{ before(grammarAccess.getSimpleEntityAccess().getImplementationAbstractKeyword_1_0()); }
			'abstract'
			{ after(grammarAccess.getSimpleEntityAccess().getImplementationAbstractKeyword_1_0()); }
		)
		{ after(grammarAccess.getSimpleEntityAccess().getImplementationAbstractKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleEntityAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSimpleEntityAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__SuperClassAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleEntityAccess().getSuperClassSimpleEntityCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getSimpleEntityAccess().getSuperClassSimpleEntityIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSimpleEntityAccess().getSuperClassSimpleEntityIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getSimpleEntityAccess().getSuperClassSimpleEntityCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__AttributesIdAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleEntityAccess().getAttributesIdDefIdAttributeParserRuleCall_5_0()); }
		ruleDefIdAttribute
		{ after(grammarAccess.getSimpleEntityAccess().getAttributesIdDefIdAttributeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__AttributesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleEntityAccess().getAttributesDefAttributeParserRuleCall_6_0()); }
		ruleDefAttribute
		{ after(grammarAccess.getSimpleEntityAccess().getAttributesDefAttributeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__MethodsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleEntityAccess().getMethodsMethodParserRuleCall_7_0()); }
		ruleMethod
		{ after(grammarAccess.getSimpleEntityAccess().getMethodsMethodParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociativeEntityAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAssociativeEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__RelationsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociativeEntityAccess().getRelationsRelationParserRuleCall_3_0()); }
		ruleRelation
		{ after(grammarAccess.getAssociativeEntityAccess().getRelationsRelationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__RelationsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociativeEntityAccess().getRelationsRelationParserRuleCall_4_0()); }
		ruleRelation
		{ after(grammarAccess.getAssociativeEntityAccess().getRelationsRelationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__AttributesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociativeEntityAccess().getAttributesDefAttributeParserRuleCall_5_0()); }
		ruleDefAttribute
		{ after(grammarAccess.getAssociativeEntityAccess().getAttributesDefAttributeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociativeEntity__MethodsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociativeEntityAccess().getMethodsMethodParserRuleCall_6_0()); }
		ruleMethod
		{ after(grammarAccess.getAssociativeEntityAccess().getMethodsMethodParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getValueTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueTypeAccess().getAttributesDefAttributeParserRuleCall_3_0()); }
		ruleDefAttribute
		{ after(grammarAccess.getValueTypeAccess().getAttributesDefAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumerableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerable__EnumsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerableAccess().getEnumsENUMERATETerminalRuleCall_3_0()); }
		RULE_ENUMERATE
		{ after(grammarAccess.getEnumerableAccess().getEnumsENUMERATETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleLink__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleLinkAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSimpleLinkAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleLink__RelationsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleLinkAccess().getRelationsRelationParserRuleCall_3_0()); }
		ruleRelation
		{ after(grammarAccess.getSimpleLinkAccess().getRelationsRelationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleLink__RelationsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleLinkAccess().getRelationsRelationParserRuleCall_4_0()); }
		ruleRelation
		{ after(grammarAccess.getSimpleLinkAccess().getRelationsRelationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__MultiplicityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getMultiplicityMultiplicityParserRuleCall_0_0()); }
		ruleMultiplicity
		{ after(grammarAccess.getRelationAccess().getMultiplicityMultiplicityParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getTypeEntityCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getTypeEntityIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationAccess().getTypeEntityIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getTypeEntityCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getRelationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__NavigableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getNavigableAlternatives_3_0()); }
		(rule__Relation__NavigableAlternatives_3_0)
		{ after(grammarAccess.getRelationAccess().getNavigableAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefAttribute__NullableAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefAttributeAccess().getNullableAlternatives_0_1_0()); }
		(rule__DefAttribute__NullableAlternatives_0_1_0)
		{ after(grammarAccess.getDefAttributeAccess().getNullableAlternatives_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefAllModelTypeVariable__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefAllModelTypeVariableAccess().getTypeAllModelTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getDefAllModelTypeVariableAccess().getTypeAllModelTypeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDefAllModelTypeVariableAccess().getTypeAllModelTypeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getDefAllModelTypeVariableAccess().getTypeAllModelTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefAllModelTypeVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefAllModelTypeVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDefAllModelTypeVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefSimpleVariable__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefSimpleVariableAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getDefSimpleVariableAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefSimpleVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefSimpleVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDefSimpleVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefModelTypeVariable__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefModelTypeVariableAccess().getTypeModelTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getDefModelTypeVariableAccess().getTypeModelTypeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDefModelTypeVariableAccess().getTypeModelTypeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getDefModelTypeVariableAccess().getTypeModelTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefModelTypeVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefModelTypeVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDefModelTypeVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCollectionTypeVariable__TypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefCollectionTypeVariableAccess().getTypeAllModelTypeCollectionParserRuleCall_0_0_0()); }
		ruleAllModelTypeCollection
		{ after(grammarAccess.getDefCollectionTypeVariableAccess().getTypeAllModelTypeCollectionParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCollectionTypeVariable__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefCollectionTypeVariableAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDefCollectionTypeVariableAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCollectionTypeVariable__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefCollectionTypeVariableAccess().getTypeSimpleTypeCollectionParserRuleCall_1_0_0()); }
		ruleSimpleTypeCollection
		{ after(grammarAccess.getDefCollectionTypeVariableAccess().getTypeSimpleTypeCollectionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCollectionTypeVariable__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefCollectionTypeVariableAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDefCollectionTypeVariableAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefModelModelTypeCollectionVariable__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefModelModelTypeCollectionVariableAccess().getTypeModelTypeCollectionParserRuleCall_0_0()); }
		ruleModelTypeCollection
		{ after(grammarAccess.getDefModelModelTypeCollectionVariableAccess().getTypeModelTypeCollectionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefModelModelTypeCollectionVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefModelModelTypeCollectionVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDefModelModelTypeCollectionVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefModelSimpleTypeCollectionVariable__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefModelSimpleTypeCollectionVariableAccess().getTypeSimpleTypeCollectionParserRuleCall_0_0()); }
		ruleSimpleTypeCollection
		{ after(grammarAccess.getDefModelSimpleTypeCollectionVariableAccess().getTypeSimpleTypeCollectionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefModelSimpleTypeCollectionVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefModelSimpleTypeCollectionVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDefModelSimpleTypeCollectionVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefLinkVariable__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefLinkVariableAccess().getTypeLinkCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDefLinkVariableAccess().getTypeLinkIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDefLinkVariableAccess().getTypeLinkIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDefLinkVariableAccess().getTypeLinkCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefLinkVariable__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefLinkVariableAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDefLinkVariableAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__ReturnTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSimpleReturnAccess().getReturnTypeSimpleReturnTypeParserRuleCall_0_0()); }
		ruleSimpleReturnType
		{ after(grammarAccess.getMethodSimpleReturnAccess().getReturnTypeSimpleReturnTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSimpleReturnAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodSimpleReturnAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__ParametersAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSimpleReturnAccess().getParametersDefVariableParserRuleCall_3_0_0()); }
		ruleDefVariable
		{ after(grammarAccess.getMethodSimpleReturnAccess().getParametersDefVariableParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSimpleReturn__ParametersAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSimpleReturnAccess().getParametersDefVariableParserRuleCall_3_1_1_0()); }
		ruleDefVariable
		{ after(grammarAccess.getMethodSimpleReturnAccess().getParametersDefVariableParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__ReturnTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodCollectionReturnAccess().getReturnTypeCollectionReturnTypeParserRuleCall_0_0()); }
		ruleCollectionReturnType
		{ after(grammarAccess.getMethodCollectionReturnAccess().getReturnTypeCollectionReturnTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodCollectionReturnAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodCollectionReturnAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__ParametersAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodCollectionReturnAccess().getParametersDefVariableParserRuleCall_3_0_0()); }
		ruleDefVariable
		{ after(grammarAccess.getMethodCollectionReturnAccess().getParametersDefVariableParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCollectionReturn__ParametersAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodCollectionReturnAccess().getParametersDefVariableParserRuleCall_3_1_1_0()); }
		ruleDefVariable
		{ after(grammarAccess.getMethodCollectionReturnAccess().getParametersDefVariableParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__ReturnTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAllModelReturnAccess().getReturnTypeAllModelTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getMethodAllModelReturnAccess().getReturnTypeAllModelTypeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMethodAllModelReturnAccess().getReturnTypeAllModelTypeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getMethodAllModelReturnAccess().getReturnTypeAllModelTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAllModelReturnAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodAllModelReturnAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__ParametersAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAllModelReturnAccess().getParametersDefVariableParserRuleCall_3_0_0()); }
		ruleDefVariable
		{ after(grammarAccess.getMethodAllModelReturnAccess().getParametersDefVariableParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAllModelReturn__ParametersAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAllModelReturnAccess().getParametersDefVariableParserRuleCall_3_1_1_0()); }
		ruleDefVariable
		{ after(grammarAccess.getMethodAllModelReturnAccess().getParametersDefVariableParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllModelTypeCollection__CollectionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAllModelTypeCollectionAccess().getCollectionAlternatives_0_0()); }
		(rule__AllModelTypeCollection__CollectionAlternatives_0_0)
		{ after(grammarAccess.getAllModelTypeCollectionAccess().getCollectionAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllModelTypeCollection__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAllModelTypeCollectionAccess().getTypeAllModelTypeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAllModelTypeCollectionAccess().getTypeAllModelTypeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAllModelTypeCollectionAccess().getTypeAllModelTypeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAllModelTypeCollectionAccess().getTypeAllModelTypeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelTypeCollection__CollectionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelTypeCollectionAccess().getCollectionAlternatives_0_0()); }
		(rule__ModelTypeCollection__CollectionAlternatives_0_0)
		{ after(grammarAccess.getModelTypeCollectionAccess().getCollectionAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelTypeCollection__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelTypeCollectionAccess().getTypeModelTypeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getModelTypeCollectionAccess().getTypeModelTypeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getModelTypeCollectionAccess().getTypeModelTypeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getModelTypeCollectionAccess().getTypeModelTypeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeCollection__CollectionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleTypeCollectionAccess().getCollectionAlternatives_0_0()); }
		(rule__SimpleTypeCollection__CollectionAlternatives_0_0)
		{ after(grammarAccess.getSimpleTypeCollectionAccess().getCollectionAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeCollection__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleTypeCollectionAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getSimpleTypeCollectionAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ONE : 'one';

RULE_MANY : 'many';

RULE_ONE_ONE : 'one-one';

RULE_LIST : 'List';

RULE_SET : 'Set';

RULE_DATE : 'Date';

RULE_VOID : 'void';

RULE_TYPE_INT : 'Integer';

RULE_TYPE_LONG : 'Long';

RULE_TYPE_DOUBLE : 'Double';

RULE_TYPE_FLOAT : 'Float';

RULE_TYPE_CHAR : 'Character';

RULE_TYPE_STRING : 'String';

RULE_TYPE_BOOLEAN : 'Boolean';

RULE_ENUMERATE : ('A'..'Z'|'\u00D1'|'_') ('A'..'Z'|'0'..'9'|'\u00D1'|'_')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
