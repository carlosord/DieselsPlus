/*
 * generated by Xtext 2.10.0
 */
package uo.diesels.model.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import uo.diesels.model.ide.contentassist.antlr.internal.InternalModelDslParser;
import uo.diesels.model.services.ModelDslGrammarAccess;

public class ModelDslParser extends AbstractContentAssistParser {

	@Inject
	private ModelDslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalModelDslParser createParser() {
		InternalModelDslParser result = new InternalModelDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
					put(grammarAccess.getAllModelTypeAccess().getAlternatives(), "rule__AllModelType__Alternatives");
					put(grammarAccess.getEntityAccess().getAlternatives(), "rule__Entity__Alternatives");
					put(grammarAccess.getModelTypeAccess().getAlternatives(), "rule__ModelType__Alternatives");
					put(grammarAccess.getLinkAccess().getAlternatives(), "rule__Link__Alternatives");
					put(grammarAccess.getRelationAccess().getNavigableAlternatives_3_0(), "rule__Relation__NavigableAlternatives_3_0");
					put(grammarAccess.getDefAttributeAccess().getAlternatives(), "rule__DefAttribute__Alternatives");
					put(grammarAccess.getDefAttributeAccess().getAlternatives_0_0(), "rule__DefAttribute__Alternatives_0_0");
					put(grammarAccess.getDefAttributeAccess().getNullableAlternatives_0_1_0(), "rule__DefAttribute__NullableAlternatives_0_1_0");
					put(grammarAccess.getDefVariableAccess().getAlternatives(), "rule__DefVariable__Alternatives");
					put(grammarAccess.getDefIdAttributeAccess().getAlternatives_0(), "rule__DefIdAttribute__Alternatives_0");
					put(grammarAccess.getDefCollectionTypeAttributeAccess().getAlternatives(), "rule__DefCollectionTypeAttribute__Alternatives");
					put(grammarAccess.getDefCollectionTypeVariableAccess().getAlternatives(), "rule__DefCollectionTypeVariable__Alternatives");
					put(grammarAccess.getMethodAccess().getAlternatives(), "rule__Method__Alternatives");
					put(grammarAccess.getAllModelTypeCollectionAccess().getCollectionAlternatives_0_0(), "rule__AllModelTypeCollection__CollectionAlternatives_0_0");
					put(grammarAccess.getModelTypeCollectionAccess().getCollectionAlternatives_0_0(), "rule__ModelTypeCollection__CollectionAlternatives_0_0");
					put(grammarAccess.getSimpleTypeCollectionAccess().getCollectionAlternatives_0_0(), "rule__SimpleTypeCollection__CollectionAlternatives_0_0");
					put(grammarAccess.getCollectionReturnTypeAccess().getAlternatives(), "rule__CollectionReturnType__Alternatives");
					put(grammarAccess.getSimpleReturnTypeAccess().getAlternatives(), "rule__SimpleReturnType__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getBasicTypeAccess().getAlternatives(), "rule__BasicType__Alternatives");
					put(grammarAccess.getMultiplicityAccess().getAlternatives(), "rule__Multiplicity__Alternatives");
					put(grammarAccess.getSimpleEntityAccess().getGroup(), "rule__SimpleEntity__Group__0");
					put(grammarAccess.getSimpleEntityAccess().getGroup_3(), "rule__SimpleEntity__Group_3__0");
					put(grammarAccess.getAssociativeEntityAccess().getGroup(), "rule__AssociativeEntity__Group__0");
					put(grammarAccess.getValueTypeAccess().getGroup(), "rule__ValueType__Group__0");
					put(grammarAccess.getEnumerableAccess().getGroup(), "rule__Enumerable__Group__0");
					put(grammarAccess.getSimpleLinkAccess().getGroup(), "rule__SimpleLink__Group__0");
					put(grammarAccess.getRelationAccess().getGroup(), "rule__Relation__Group__0");
					put(grammarAccess.getDefAttributeAccess().getGroup_0(), "rule__DefAttribute__Group_0__0");
					put(grammarAccess.getDefIdAttributeAccess().getGroup(), "rule__DefIdAttribute__Group__0");
					put(grammarAccess.getDefAllModelTypeVariableAccess().getGroup(), "rule__DefAllModelTypeVariable__Group__0");
					put(grammarAccess.getDefSimpleVariableAccess().getGroup(), "rule__DefSimpleVariable__Group__0");
					put(grammarAccess.getDefModelTypeVariableAccess().getGroup(), "rule__DefModelTypeVariable__Group__0");
					put(grammarAccess.getDefCollectionTypeVariableAccess().getGroup_0(), "rule__DefCollectionTypeVariable__Group_0__0");
					put(grammarAccess.getDefCollectionTypeVariableAccess().getGroup_1(), "rule__DefCollectionTypeVariable__Group_1__0");
					put(grammarAccess.getDefModelModelTypeCollectionVariableAccess().getGroup(), "rule__DefModelModelTypeCollectionVariable__Group__0");
					put(grammarAccess.getDefModelSimpleTypeCollectionVariableAccess().getGroup(), "rule__DefModelSimpleTypeCollectionVariable__Group__0");
					put(grammarAccess.getDefLinkVariableAccess().getGroup(), "rule__DefLinkVariable__Group__0");
					put(grammarAccess.getMethodSimpleReturnAccess().getGroup(), "rule__MethodSimpleReturn__Group__0");
					put(grammarAccess.getMethodSimpleReturnAccess().getGroup_3(), "rule__MethodSimpleReturn__Group_3__0");
					put(grammarAccess.getMethodSimpleReturnAccess().getGroup_3_1(), "rule__MethodSimpleReturn__Group_3_1__0");
					put(grammarAccess.getMethodCollectionReturnAccess().getGroup(), "rule__MethodCollectionReturn__Group__0");
					put(grammarAccess.getMethodCollectionReturnAccess().getGroup_3(), "rule__MethodCollectionReturn__Group_3__0");
					put(grammarAccess.getMethodCollectionReturnAccess().getGroup_3_1(), "rule__MethodCollectionReturn__Group_3_1__0");
					put(grammarAccess.getMethodAllModelReturnAccess().getGroup(), "rule__MethodAllModelReturn__Group__0");
					put(grammarAccess.getMethodAllModelReturnAccess().getGroup_3(), "rule__MethodAllModelReturn__Group_3__0");
					put(grammarAccess.getMethodAllModelReturnAccess().getGroup_3_1(), "rule__MethodAllModelReturn__Group_3_1__0");
					put(grammarAccess.getAllModelTypeCollectionAccess().getGroup(), "rule__AllModelTypeCollection__Group__0");
					put(grammarAccess.getModelTypeCollectionAccess().getGroup(), "rule__ModelTypeCollection__Group__0");
					put(grammarAccess.getSimpleTypeCollectionAccess().getGroup(), "rule__SimpleTypeCollection__Group__0");
					put(grammarAccess.getModelAccess().getElementsAssignment(), "rule__Model__ElementsAssignment");
					put(grammarAccess.getSimpleEntityAccess().getImplementationAssignment_1(), "rule__SimpleEntity__ImplementationAssignment_1");
					put(grammarAccess.getSimpleEntityAccess().getNameAssignment_2(), "rule__SimpleEntity__NameAssignment_2");
					put(grammarAccess.getSimpleEntityAccess().getSuperClassAssignment_3_1(), "rule__SimpleEntity__SuperClassAssignment_3_1");
					put(grammarAccess.getSimpleEntityAccess().getAttributesIdAssignment_5(), "rule__SimpleEntity__AttributesIdAssignment_5");
					put(grammarAccess.getSimpleEntityAccess().getAttributesAssignment_6(), "rule__SimpleEntity__AttributesAssignment_6");
					put(grammarAccess.getSimpleEntityAccess().getMethodsAssignment_7(), "rule__SimpleEntity__MethodsAssignment_7");
					put(grammarAccess.getAssociativeEntityAccess().getNameAssignment_1(), "rule__AssociativeEntity__NameAssignment_1");
					put(grammarAccess.getAssociativeEntityAccess().getRelationsAssignment_3(), "rule__AssociativeEntity__RelationsAssignment_3");
					put(grammarAccess.getAssociativeEntityAccess().getRelationsAssignment_4(), "rule__AssociativeEntity__RelationsAssignment_4");
					put(grammarAccess.getAssociativeEntityAccess().getAttributesAssignment_5(), "rule__AssociativeEntity__AttributesAssignment_5");
					put(grammarAccess.getAssociativeEntityAccess().getMethodsAssignment_6(), "rule__AssociativeEntity__MethodsAssignment_6");
					put(grammarAccess.getValueTypeAccess().getNameAssignment_1(), "rule__ValueType__NameAssignment_1");
					put(grammarAccess.getValueTypeAccess().getAttributesAssignment_3(), "rule__ValueType__AttributesAssignment_3");
					put(grammarAccess.getEnumerableAccess().getNameAssignment_1(), "rule__Enumerable__NameAssignment_1");
					put(grammarAccess.getEnumerableAccess().getEnumsAssignment_3(), "rule__Enumerable__EnumsAssignment_3");
					put(grammarAccess.getSimpleLinkAccess().getNameAssignment_1(), "rule__SimpleLink__NameAssignment_1");
					put(grammarAccess.getSimpleLinkAccess().getRelationsAssignment_3(), "rule__SimpleLink__RelationsAssignment_3");
					put(grammarAccess.getSimpleLinkAccess().getRelationsAssignment_4(), "rule__SimpleLink__RelationsAssignment_4");
					put(grammarAccess.getRelationAccess().getMultiplicityAssignment_0(), "rule__Relation__MultiplicityAssignment_0");
					put(grammarAccess.getRelationAccess().getTypeAssignment_1(), "rule__Relation__TypeAssignment_1");
					put(grammarAccess.getRelationAccess().getNameAssignment_2(), "rule__Relation__NameAssignment_2");
					put(grammarAccess.getRelationAccess().getNavigableAssignment_3(), "rule__Relation__NavigableAssignment_3");
					put(grammarAccess.getDefAttributeAccess().getNullableAssignment_0_1(), "rule__DefAttribute__NullableAssignment_0_1");
					put(grammarAccess.getDefAllModelTypeVariableAccess().getTypeAssignment_0(), "rule__DefAllModelTypeVariable__TypeAssignment_0");
					put(grammarAccess.getDefAllModelTypeVariableAccess().getNameAssignment_1(), "rule__DefAllModelTypeVariable__NameAssignment_1");
					put(grammarAccess.getDefSimpleVariableAccess().getTypeAssignment_0(), "rule__DefSimpleVariable__TypeAssignment_0");
					put(grammarAccess.getDefSimpleVariableAccess().getNameAssignment_1(), "rule__DefSimpleVariable__NameAssignment_1");
					put(grammarAccess.getDefModelTypeVariableAccess().getTypeAssignment_0(), "rule__DefModelTypeVariable__TypeAssignment_0");
					put(grammarAccess.getDefModelTypeVariableAccess().getNameAssignment_1(), "rule__DefModelTypeVariable__NameAssignment_1");
					put(grammarAccess.getDefCollectionTypeVariableAccess().getTypeAssignment_0_0(), "rule__DefCollectionTypeVariable__TypeAssignment_0_0");
					put(grammarAccess.getDefCollectionTypeVariableAccess().getNameAssignment_0_1(), "rule__DefCollectionTypeVariable__NameAssignment_0_1");
					put(grammarAccess.getDefCollectionTypeVariableAccess().getTypeAssignment_1_0(), "rule__DefCollectionTypeVariable__TypeAssignment_1_0");
					put(grammarAccess.getDefCollectionTypeVariableAccess().getNameAssignment_1_1(), "rule__DefCollectionTypeVariable__NameAssignment_1_1");
					put(grammarAccess.getDefModelModelTypeCollectionVariableAccess().getTypeAssignment_0(), "rule__DefModelModelTypeCollectionVariable__TypeAssignment_0");
					put(grammarAccess.getDefModelModelTypeCollectionVariableAccess().getNameAssignment_1(), "rule__DefModelModelTypeCollectionVariable__NameAssignment_1");
					put(grammarAccess.getDefModelSimpleTypeCollectionVariableAccess().getTypeAssignment_0(), "rule__DefModelSimpleTypeCollectionVariable__TypeAssignment_0");
					put(grammarAccess.getDefModelSimpleTypeCollectionVariableAccess().getNameAssignment_1(), "rule__DefModelSimpleTypeCollectionVariable__NameAssignment_1");
					put(grammarAccess.getDefLinkVariableAccess().getTypeAssignment_1(), "rule__DefLinkVariable__TypeAssignment_1");
					put(grammarAccess.getDefLinkVariableAccess().getNameAssignment_2(), "rule__DefLinkVariable__NameAssignment_2");
					put(grammarAccess.getMethodSimpleReturnAccess().getReturnTypeAssignment_0(), "rule__MethodSimpleReturn__ReturnTypeAssignment_0");
					put(grammarAccess.getMethodSimpleReturnAccess().getNameAssignment_1(), "rule__MethodSimpleReturn__NameAssignment_1");
					put(grammarAccess.getMethodSimpleReturnAccess().getParametersAssignment_3_0(), "rule__MethodSimpleReturn__ParametersAssignment_3_0");
					put(grammarAccess.getMethodSimpleReturnAccess().getParametersAssignment_3_1_1(), "rule__MethodSimpleReturn__ParametersAssignment_3_1_1");
					put(grammarAccess.getMethodCollectionReturnAccess().getReturnTypeAssignment_0(), "rule__MethodCollectionReturn__ReturnTypeAssignment_0");
					put(grammarAccess.getMethodCollectionReturnAccess().getNameAssignment_1(), "rule__MethodCollectionReturn__NameAssignment_1");
					put(grammarAccess.getMethodCollectionReturnAccess().getParametersAssignment_3_0(), "rule__MethodCollectionReturn__ParametersAssignment_3_0");
					put(grammarAccess.getMethodCollectionReturnAccess().getParametersAssignment_3_1_1(), "rule__MethodCollectionReturn__ParametersAssignment_3_1_1");
					put(grammarAccess.getMethodAllModelReturnAccess().getReturnTypeAssignment_0(), "rule__MethodAllModelReturn__ReturnTypeAssignment_0");
					put(grammarAccess.getMethodAllModelReturnAccess().getNameAssignment_1(), "rule__MethodAllModelReturn__NameAssignment_1");
					put(grammarAccess.getMethodAllModelReturnAccess().getParametersAssignment_3_0(), "rule__MethodAllModelReturn__ParametersAssignment_3_0");
					put(grammarAccess.getMethodAllModelReturnAccess().getParametersAssignment_3_1_1(), "rule__MethodAllModelReturn__ParametersAssignment_3_1_1");
					put(grammarAccess.getAllModelTypeCollectionAccess().getCollectionAssignment_0(), "rule__AllModelTypeCollection__CollectionAssignment_0");
					put(grammarAccess.getAllModelTypeCollectionAccess().getTypeAssignment_2(), "rule__AllModelTypeCollection__TypeAssignment_2");
					put(grammarAccess.getModelTypeCollectionAccess().getCollectionAssignment_0(), "rule__ModelTypeCollection__CollectionAssignment_0");
					put(grammarAccess.getModelTypeCollectionAccess().getTypeAssignment_2(), "rule__ModelTypeCollection__TypeAssignment_2");
					put(grammarAccess.getSimpleTypeCollectionAccess().getCollectionAssignment_0(), "rule__SimpleTypeCollection__CollectionAssignment_0");
					put(grammarAccess.getSimpleTypeCollectionAccess().getTypeAssignment_2(), "rule__SimpleTypeCollection__TypeAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalModelDslParser typedParser = (InternalModelDslParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ModelDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ModelDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
