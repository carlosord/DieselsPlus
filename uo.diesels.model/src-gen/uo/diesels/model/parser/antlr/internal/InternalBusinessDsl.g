/*
 * generated by Xtext 2.10.0
 */
grammar InternalBusinessDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package uo.diesels.model.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package uo.diesels.model.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import uo.diesels.model.services.BusinessDslGrammarAccess;

}

@parser::members {

 	private BusinessDslGrammarAccess grammarAccess;

    public InternalBusinessDslParser(TokenStream input, BusinessDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected BusinessDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getServicesServiceParserRuleCall_0());
			}
			lv_services_0_0=ruleService
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"services",
					lv_services_0_0,
					"uo.diesels.model.BusinessDsl.Service");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleService
entryRuleService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	iv_ruleService=ruleService
	{ $current=$iv_ruleService.current; }
	EOF;

// Rule Service
ruleService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Service'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAccess().getMethodsServiceMethodParserRuleCall_3_0());
				}
				lv_methods_3_0=ruleServiceMethod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceRule());
					}
					add(
						$current,
						"methods",
						lv_methods_3_0,
						"uo.diesels.model.BusinessDsl.ServiceMethod");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleServiceMethod
entryRuleServiceMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceMethodRule()); }
	iv_ruleServiceMethod=ruleServiceMethod
	{ $current=$iv_ruleServiceMethod.current; }
	EOF;

// Rule ServiceMethod
ruleServiceMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getServiceMethodAccess().getJpaMethodParserRuleCall_0());
		}
		this_JpaMethod_0=ruleJpaMethod
		{
			$current = $this_JpaMethod_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getServiceMethodAccess().getFinderUserMethodParserRuleCall_1());
		}
		this_FinderUserMethod_1=ruleFinderUserMethod
		{
			$current = $this_FinderUserMethod_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJpaMethod
entryRuleJpaMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJpaMethodRule()); }
	iv_ruleJpaMethod=ruleJpaMethod
	{ $current=$iv_ruleJpaMethod.current; }
	EOF;

// Rule JpaMethod
ruleJpaMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getJpaMethodAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJpaMethodRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getJpaMethodAccess().getLeftParenthesisKeyword_1());
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getJpaMethodAccess().getRightParenthesisKeyword_2());
		}
		(
			(
				(
					lv_keyword_3_1='save'
					{
						newLeafNode(lv_keyword_3_1, grammarAccess.getJpaMethodAccess().getKeywordSaveKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJpaMethodRule());
						}
						setWithLastConsumed($current, "keyword", lv_keyword_3_1, null);
					}
					    |
					lv_keyword_3_2='update'
					{
						newLeafNode(lv_keyword_3_2, grammarAccess.getJpaMethodAccess().getKeywordUpdateKeyword_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJpaMethodRule());
						}
						setWithLastConsumed($current, "keyword", lv_keyword_3_2, null);
					}
					    |
					lv_keyword_3_3='delete'
					{
						newLeafNode(lv_keyword_3_3, grammarAccess.getJpaMethodAccess().getKeywordDeleteKeyword_3_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJpaMethodRule());
						}
						setWithLastConsumed($current, "keyword", lv_keyword_3_3, null);
					}
					    |
					lv_keyword_3_4='find'
					{
						newLeafNode(lv_keyword_3_4, grammarAccess.getJpaMethodAccess().getKeywordFindKeyword_3_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJpaMethodRule());
						}
						setWithLastConsumed($current, "keyword", lv_keyword_3_4, null);
					}
				)
			)
		)
		otherlv_4='<'
		{
			newLeafNode(otherlv_4, grammarAccess.getJpaMethodAccess().getLessThanSignKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJpaMethodRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getJpaMethodAccess().getEntityEntityCrossReference_5_0());
				}
			)
		)
		otherlv_6='>'
		{
			newLeafNode(otherlv_6, grammarAccess.getJpaMethodAccess().getGreaterThanSignKeyword_6());
		}
	)
;

// Entry rule entryRuleFinderUserMethod
entryRuleFinderUserMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFinderUserMethodRule()); }
	iv_ruleFinderUserMethod=ruleFinderUserMethod
	{ $current=$iv_ruleFinderUserMethod.current; }
	EOF;

// Rule FinderUserMethod
ruleFinderUserMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFinderUserMethodAccess().getMethodSimpleReturnParserRuleCall_0_0());
			}
			this_MethodSimpleReturn_0=ruleMethodSimpleReturn
			{
				$current = $this_MethodSimpleReturn_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getFinderUserMethodAccess().getMethodAllModelReturnParserRuleCall_0_1());
			}
			this_MethodAllModelReturn_1=ruleMethodAllModelReturn
			{
				$current = $this_MethodAllModelReturn_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getFinderUserMethodAccess().getMethodDtoReturnParserRuleCall_0_2());
			}
			this_MethodDtoReturn_2=ruleMethodDtoReturn
			{
				$current = $this_MethodDtoReturn_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getFinderUserMethodAccess().getMethodCollectionReturnParserRuleCall_0_3());
			}
			this_MethodCollectionReturn_3=ruleMethodCollectionReturn
			{
				$current = $this_MethodCollectionReturn_3.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				(
					lv_keyword_4_0='finder'
					{
						newLeafNode(lv_keyword_4_0, grammarAccess.getFinderUserMethodAccess().getKeywordFinderKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFinderUserMethodRule());
						}
						setWithLastConsumed($current, "keyword", lv_keyword_4_0, "finder");
					}
				)
			)
			otherlv_5='<'
			{
				newLeafNode(otherlv_5, grammarAccess.getFinderUserMethodAccess().getLessThanSignKeyword_1_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFinderUserMethodRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getFinderUserMethodAccess().getFinderFinderCrossReference_1_2_0());
					}
				)
			)
			otherlv_7='>'
			{
				newLeafNode(otherlv_7, grammarAccess.getFinderUserMethodAccess().getGreaterThanSignKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRuleMethodSimpleReturn
entryRuleMethodSimpleReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodSimpleReturnRule()); }
	iv_ruleMethodSimpleReturn=ruleMethodSimpleReturn
	{ $current=$iv_ruleMethodSimpleReturn.current; }
	EOF;

// Rule MethodSimpleReturn
ruleMethodSimpleReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodSimpleReturnAccess().getReturnTypeSimpleReturnTypeParserRuleCall_0_0());
				}
				lv_returnType_0_0=ruleSimpleReturnType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodSimpleReturnRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_0_0,
						"uo.diesels.model.BusinessDsl.SimpleReturnType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMethodSimpleReturnAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodSimpleReturnRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getMethodSimpleReturnAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodSimpleReturnAccess().getParametersDefVariableParserRuleCall_3_0_0());
					}
					lv_parameters_3_0=ruleDefVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodSimpleReturnRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"uo.diesels.model.BusinessDsl.DefVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getMethodSimpleReturnAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodSimpleReturnAccess().getParametersDefVariableParserRuleCall_3_1_1_0());
						}
						lv_parameters_5_0=ruleDefVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodSimpleReturnRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_5_0,
								"uo.diesels.model.BusinessDsl.DefVariable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getMethodSimpleReturnAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleMethodAllModelReturn
entryRuleMethodAllModelReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodAllModelReturnRule()); }
	iv_ruleMethodAllModelReturn=ruleMethodAllModelReturn
	{ $current=$iv_ruleMethodAllModelReturn.current; }
	EOF;

// Rule MethodAllModelReturn
ruleMethodAllModelReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodAllModelReturnRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getMethodAllModelReturnAccess().getReturnTypeAllModelTypeCrossReference_0_0());
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMethodAllModelReturnAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodAllModelReturnRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getMethodAllModelReturnAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodAllModelReturnAccess().getParametersDefVariableParserRuleCall_3_0_0());
					}
					lv_parameters_3_0=ruleDefVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodAllModelReturnRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"uo.diesels.model.BusinessDsl.DefVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getMethodAllModelReturnAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodAllModelReturnAccess().getParametersDefVariableParserRuleCall_3_1_1_0());
						}
						lv_parameters_5_0=ruleDefVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodAllModelReturnRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_5_0,
								"uo.diesels.model.BusinessDsl.DefVariable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getMethodAllModelReturnAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleMethodDtoReturn
entryRuleMethodDtoReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodDtoReturnRule()); }
	iv_ruleMethodDtoReturn=ruleMethodDtoReturn
	{ $current=$iv_ruleMethodDtoReturn.current; }
	EOF;

// Rule MethodDtoReturn
ruleMethodDtoReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#'
		{
			newLeafNode(otherlv_0, grammarAccess.getMethodDtoReturnAccess().getNumberSignKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodDtoReturnRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getMethodDtoReturnAccess().getReturnTypeDtoCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getMethodDtoReturnAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodDtoReturnRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getMethodDtoReturnAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodDtoReturnAccess().getParametersDefVariableParserRuleCall_4_0_0());
					}
					lv_parameters_4_0=ruleDefVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodDtoReturnRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_4_0,
							"uo.diesels.model.BusinessDsl.DefVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getMethodDtoReturnAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodDtoReturnAccess().getParametersDefVariableParserRuleCall_4_1_1_0());
						}
						lv_parameters_6_0=ruleDefVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodDtoReturnRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_6_0,
								"uo.diesels.model.BusinessDsl.DefVariable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getMethodDtoReturnAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleMethodCollectionReturn
entryRuleMethodCollectionReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodCollectionReturnRule()); }
	iv_ruleMethodCollectionReturn=ruleMethodCollectionReturn
	{ $current=$iv_ruleMethodCollectionReturn.current; }
	EOF;

// Rule MethodCollectionReturn
ruleMethodCollectionReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodCollectionReturnAccess().getReturnTypeCollectionReturnTypeParserRuleCall_0_0());
				}
				lv_returnType_0_0=ruleCollectionReturnType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodCollectionReturnRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_0_0,
						"uo.diesels.model.BusinessDsl.CollectionReturnType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMethodCollectionReturnAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodCollectionReturnRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getMethodCollectionReturnAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodCollectionReturnAccess().getParametersDefVariableParserRuleCall_3_0_0());
					}
					lv_parameters_3_0=ruleDefVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodCollectionReturnRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"uo.diesels.model.BusinessDsl.DefVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getMethodCollectionReturnAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodCollectionReturnAccess().getParametersDefVariableParserRuleCall_3_1_1_0());
						}
						lv_parameters_5_0=ruleDefVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodCollectionReturnRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_5_0,
								"uo.diesels.model.BusinessDsl.DefVariable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getMethodCollectionReturnAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleDefVariable
entryRuleDefVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefVariableRule()); }
	iv_ruleDefVariable=ruleDefVariable
	{ $current=$iv_ruleDefVariable.current; }
	EOF;

// Rule DefVariable
ruleDefVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDefVariableAccess().getDefSimpleVariableParserRuleCall_0());
		}
		this_DefSimpleVariable_0=ruleDefSimpleVariable
		{
			$current = $this_DefSimpleVariable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefVariableAccess().getDefAllModelTypeVariableParserRuleCall_1());
		}
		this_DefAllModelTypeVariable_1=ruleDefAllModelTypeVariable
		{
			$current = $this_DefAllModelTypeVariable_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefVariableAccess().getDefDtoTypeVariableParserRuleCall_2());
		}
		this_DefDtoTypeVariable_2=ruleDefDtoTypeVariable
		{
			$current = $this_DefDtoTypeVariable_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefVariableAccess().getDefCollectionTypeVariableParserRuleCall_3());
		}
		this_DefCollectionTypeVariable_3=ruleDefCollectionTypeVariable
		{
			$current = $this_DefCollectionTypeVariable_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDefAllModelTypeVariable
entryRuleDefAllModelTypeVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefAllModelTypeVariableRule()); }
	iv_ruleDefAllModelTypeVariable=ruleDefAllModelTypeVariable
	{ $current=$iv_ruleDefAllModelTypeVariable.current; }
	EOF;

// Rule DefAllModelTypeVariable
ruleDefAllModelTypeVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefAllModelTypeVariableRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getDefAllModelTypeVariableAccess().getTypeAllModelTypeCrossReference_0_0());
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDefAllModelTypeVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefAllModelTypeVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDefDtoTypeVariable
entryRuleDefDtoTypeVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefDtoTypeVariableRule()); }
	iv_ruleDefDtoTypeVariable=ruleDefDtoTypeVariable
	{ $current=$iv_ruleDefDtoTypeVariable.current; }
	EOF;

// Rule DefDtoTypeVariable
ruleDefDtoTypeVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefDtoTypeVariableAccess().getNumberSignKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefDtoTypeVariableRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDefDtoTypeVariableAccess().getTypeDtoCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDefDtoTypeVariableAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefDtoTypeVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDefSimpleVariable
entryRuleDefSimpleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefSimpleVariableRule()); }
	iv_ruleDefSimpleVariable=ruleDefSimpleVariable
	{ $current=$iv_ruleDefSimpleVariable.current; }
	EOF;

// Rule DefSimpleVariable
ruleDefSimpleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDefSimpleVariableAccess().getTypeTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefSimpleVariableRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"uo.diesels.model.BusinessDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDefSimpleVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefSimpleVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDefCollectionTypeVariable
entryRuleDefCollectionTypeVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefCollectionTypeVariableRule()); }
	iv_ruleDefCollectionTypeVariable=ruleDefCollectionTypeVariable
	{ $current=$iv_ruleDefCollectionTypeVariable.current; }
	EOF;

// Rule DefCollectionTypeVariable
ruleDefCollectionTypeVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDefCollectionTypeVariableAccess().getDefAllModelTypeCollectionVariableParserRuleCall_0());
		}
		this_DefAllModelTypeCollectionVariable_0=ruleDefAllModelTypeCollectionVariable
		{
			$current = $this_DefAllModelTypeCollectionVariable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefCollectionTypeVariableAccess().getDefDtoTypeCollectionVariableParserRuleCall_1());
		}
		this_DefDtoTypeCollectionVariable_1=ruleDefDtoTypeCollectionVariable
		{
			$current = $this_DefDtoTypeCollectionVariable_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefCollectionTypeVariableAccess().getDefSimpleTypeCollectionVariableParserRuleCall_2());
		}
		this_DefSimpleTypeCollectionVariable_2=ruleDefSimpleTypeCollectionVariable
		{
			$current = $this_DefSimpleTypeCollectionVariable_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDefAllModelTypeCollectionVariable
entryRuleDefAllModelTypeCollectionVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefAllModelTypeCollectionVariableRule()); }
	iv_ruleDefAllModelTypeCollectionVariable=ruleDefAllModelTypeCollectionVariable
	{ $current=$iv_ruleDefAllModelTypeCollectionVariable.current; }
	EOF;

// Rule DefAllModelTypeCollectionVariable
ruleDefAllModelTypeCollectionVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDefAllModelTypeCollectionVariableAccess().getTypeAllModelTypeCollectionParserRuleCall_0_0());
				}
				lv_type_0_0=ruleAllModelTypeCollection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefAllModelTypeCollectionVariableRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"uo.diesels.model.BusinessDsl.AllModelTypeCollection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDefAllModelTypeCollectionVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefAllModelTypeCollectionVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDefSimpleTypeCollectionVariable
entryRuleDefSimpleTypeCollectionVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefSimpleTypeCollectionVariableRule()); }
	iv_ruleDefSimpleTypeCollectionVariable=ruleDefSimpleTypeCollectionVariable
	{ $current=$iv_ruleDefSimpleTypeCollectionVariable.current; }
	EOF;

// Rule DefSimpleTypeCollectionVariable
ruleDefSimpleTypeCollectionVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDefSimpleTypeCollectionVariableAccess().getTypeSimpleTypeCollectionParserRuleCall_0_0());
				}
				lv_type_0_0=ruleSimpleTypeCollection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefSimpleTypeCollectionVariableRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"uo.diesels.model.BusinessDsl.SimpleTypeCollection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDefSimpleTypeCollectionVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefSimpleTypeCollectionVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDefDtoTypeCollectionVariable
entryRuleDefDtoTypeCollectionVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefDtoTypeCollectionVariableRule()); }
	iv_ruleDefDtoTypeCollectionVariable=ruleDefDtoTypeCollectionVariable
	{ $current=$iv_ruleDefDtoTypeCollectionVariable.current; }
	EOF;

// Rule DefDtoTypeCollectionVariable
ruleDefDtoTypeCollectionVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDefDtoTypeCollectionVariableAccess().getTypeDtoTypeCollectionParserRuleCall_0_0());
				}
				lv_type_0_0=ruleDtoTypeCollection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefDtoTypeCollectionVariableRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"uo.diesels.model.BusinessDsl.DtoTypeCollection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDefDtoTypeCollectionVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefDtoTypeCollectionVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleCollectionReturnType
entryRuleCollectionReturnType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionReturnTypeRule()); }
	iv_ruleCollectionReturnType=ruleCollectionReturnType
	{ $current=$iv_ruleCollectionReturnType.current; }
	EOF;

// Rule CollectionReturnType
ruleCollectionReturnType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCollectionReturnTypeAccess().getAllModelTypeCollectionParserRuleCall_0());
		}
		this_AllModelTypeCollection_0=ruleAllModelTypeCollection
		{
			$current = $this_AllModelTypeCollection_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCollectionReturnTypeAccess().getDtoTypeCollectionParserRuleCall_1());
		}
		this_DtoTypeCollection_1=ruleDtoTypeCollection
		{
			$current = $this_DtoTypeCollection_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCollectionReturnTypeAccess().getSimpleTypeCollectionParserRuleCall_2());
		}
		this_SimpleTypeCollection_2=ruleSimpleTypeCollection
		{
			$current = $this_SimpleTypeCollection_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAllModelTypeCollection
entryRuleAllModelTypeCollection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAllModelTypeCollectionRule()); }
	iv_ruleAllModelTypeCollection=ruleAllModelTypeCollection
	{ $current=$iv_ruleAllModelTypeCollection.current; }
	EOF;

// Rule AllModelTypeCollection
ruleAllModelTypeCollection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_collection_0_1=RULE_LIST
					{
						newLeafNode(lv_collection_0_1, grammarAccess.getAllModelTypeCollectionAccess().getCollectionLISTTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAllModelTypeCollectionRule());
						}
						setWithLastConsumed(
							$current,
							"collection",
							lv_collection_0_1,
							"uo.diesels.model.BusinessDsl.LIST");
					}
					    |
					lv_collection_0_2=RULE_SET
					{
						newLeafNode(lv_collection_0_2, grammarAccess.getAllModelTypeCollectionAccess().getCollectionSETTerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAllModelTypeCollectionRule());
						}
						setWithLastConsumed(
							$current,
							"collection",
							lv_collection_0_2,
							"uo.diesels.model.BusinessDsl.SET");
					}
				)
			)
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getAllModelTypeCollectionAccess().getLessThanSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAllModelTypeCollectionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getAllModelTypeCollectionAccess().getTypeAllModelTypeCrossReference_2_0());
				}
			)
		)
		otherlv_3='>'
		{
			newLeafNode(otherlv_3, grammarAccess.getAllModelTypeCollectionAccess().getGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleDtoTypeCollection
entryRuleDtoTypeCollection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDtoTypeCollectionRule()); }
	iv_ruleDtoTypeCollection=ruleDtoTypeCollection
	{ $current=$iv_ruleDtoTypeCollection.current; }
	EOF;

// Rule DtoTypeCollection
ruleDtoTypeCollection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_collection_0_1=RULE_LIST
					{
						newLeafNode(lv_collection_0_1, grammarAccess.getDtoTypeCollectionAccess().getCollectionLISTTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDtoTypeCollectionRule());
						}
						setWithLastConsumed(
							$current,
							"collection",
							lv_collection_0_1,
							"uo.diesels.model.BusinessDsl.LIST");
					}
					    |
					lv_collection_0_2=RULE_SET
					{
						newLeafNode(lv_collection_0_2, grammarAccess.getDtoTypeCollectionAccess().getCollectionSETTerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDtoTypeCollectionRule());
						}
						setWithLastConsumed(
							$current,
							"collection",
							lv_collection_0_2,
							"uo.diesels.model.BusinessDsl.SET");
					}
				)
			)
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getDtoTypeCollectionAccess().getLessThanSignKeyword_1());
		}
		otherlv_2='#'
		{
			newLeafNode(otherlv_2, grammarAccess.getDtoTypeCollectionAccess().getNumberSignKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDtoTypeCollectionRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getDtoTypeCollectionAccess().getTypeDtoCrossReference_3_0());
				}
			)
		)
		otherlv_4='>'
		{
			newLeafNode(otherlv_4, grammarAccess.getDtoTypeCollectionAccess().getGreaterThanSignKeyword_4());
		}
	)
;

// Entry rule entryRuleSimpleTypeCollection
entryRuleSimpleTypeCollection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleTypeCollectionRule()); }
	iv_ruleSimpleTypeCollection=ruleSimpleTypeCollection
	{ $current=$iv_ruleSimpleTypeCollection.current; }
	EOF;

// Rule SimpleTypeCollection
ruleSimpleTypeCollection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_collection_0_1=RULE_LIST
					{
						newLeafNode(lv_collection_0_1, grammarAccess.getSimpleTypeCollectionAccess().getCollectionLISTTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleTypeCollectionRule());
						}
						setWithLastConsumed(
							$current,
							"collection",
							lv_collection_0_1,
							"uo.diesels.model.BusinessDsl.LIST");
					}
					    |
					lv_collection_0_2=RULE_SET
					{
						newLeafNode(lv_collection_0_2, grammarAccess.getSimpleTypeCollectionAccess().getCollectionSETTerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleTypeCollectionRule());
						}
						setWithLastConsumed(
							$current,
							"collection",
							lv_collection_0_2,
							"uo.diesels.model.BusinessDsl.SET");
					}
				)
			)
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getSimpleTypeCollectionAccess().getLessThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleTypeCollectionAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleTypeCollectionRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"uo.diesels.model.BusinessDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='>'
		{
			newLeafNode(otherlv_3, grammarAccess.getSimpleTypeCollectionAccess().getGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleSimpleReturnType
entryRuleSimpleReturnType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSimpleReturnTypeRule()); }
	iv_ruleSimpleReturnType=ruleSimpleReturnType
	{ $current=$iv_ruleSimpleReturnType.current.getText(); }
	EOF;

// Rule SimpleReturnType
ruleSimpleReturnType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimpleReturnTypeAccess().getTypeParserRuleCall_0());
		}
		this_Type_0=ruleType
		{
			$current.merge(this_Type_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_VOID_1=RULE_VOID
		{
			$current.merge(this_VOID_1);
		}
		{
			newLeafNode(this_VOID_1, grammarAccess.getSimpleReturnTypeAccess().getVOIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current.getText(); }
	EOF;

// Rule Type
ruleType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getBasicTypeParserRuleCall_0());
		}
		this_BasicType_0=ruleBasicType
		{
			$current.merge(this_BasicType_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getComplexTypeParserRuleCall_1());
		}
		this_ComplexType_1=ruleComplexType
		{
			$current.merge(this_ComplexType_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBasicType
entryRuleBasicType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBasicTypeRule()); }
	iv_ruleBasicType=ruleBasicType
	{ $current=$iv_ruleBasicType.current.getText(); }
	EOF;

// Rule BasicType
ruleBasicType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_TYPE_INT_0=RULE_TYPE_INT
		{
			$current.merge(this_TYPE_INT_0);
		}
		{
			newLeafNode(this_TYPE_INT_0, grammarAccess.getBasicTypeAccess().getTYPE_INTTerminalRuleCall_0());
		}
		    |
		this_TYPE_DOUBLE_1=RULE_TYPE_DOUBLE
		{
			$current.merge(this_TYPE_DOUBLE_1);
		}
		{
			newLeafNode(this_TYPE_DOUBLE_1, grammarAccess.getBasicTypeAccess().getTYPE_DOUBLETerminalRuleCall_1());
		}
		    |
		this_TYPE_FLOAT_2=RULE_TYPE_FLOAT
		{
			$current.merge(this_TYPE_FLOAT_2);
		}
		{
			newLeafNode(this_TYPE_FLOAT_2, grammarAccess.getBasicTypeAccess().getTYPE_FLOATTerminalRuleCall_2());
		}
		    |
		this_TYPE_LONG_3=RULE_TYPE_LONG
		{
			$current.merge(this_TYPE_LONG_3);
		}
		{
			newLeafNode(this_TYPE_LONG_3, grammarAccess.getBasicTypeAccess().getTYPE_LONGTerminalRuleCall_3());
		}
		    |
		this_TYPE_CHAR_4=RULE_TYPE_CHAR
		{
			$current.merge(this_TYPE_CHAR_4);
		}
		{
			newLeafNode(this_TYPE_CHAR_4, grammarAccess.getBasicTypeAccess().getTYPE_CHARTerminalRuleCall_4());
		}
		    |
		this_TYPE_STRING_5=RULE_TYPE_STRING
		{
			$current.merge(this_TYPE_STRING_5);
		}
		{
			newLeafNode(this_TYPE_STRING_5, grammarAccess.getBasicTypeAccess().getTYPE_STRINGTerminalRuleCall_5());
		}
		    |
		this_TYPE_BOOLEAN_6=RULE_TYPE_BOOLEAN
		{
			$current.merge(this_TYPE_BOOLEAN_6);
		}
		{
			newLeafNode(this_TYPE_BOOLEAN_6, grammarAccess.getBasicTypeAccess().getTYPE_BOOLEANTerminalRuleCall_6());
		}
		    |
		this_TYPE_BINARY_7=RULE_TYPE_BINARY
		{
			$current.merge(this_TYPE_BINARY_7);
		}
		{
			newLeafNode(this_TYPE_BINARY_7, grammarAccess.getBasicTypeAccess().getTYPE_BINARYTerminalRuleCall_7());
		}
	)
;

// Entry rule entryRuleComplexType
entryRuleComplexType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getComplexTypeRule()); }
	iv_ruleComplexType=ruleComplexType
	{ $current=$iv_ruleComplexType.current.getText(); }
	EOF;

// Rule ComplexType
ruleComplexType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_DATE_0=RULE_DATE
	{
		$current.merge(this_DATE_0);
	}
	{
		newLeafNode(this_DATE_0, grammarAccess.getComplexTypeAccess().getDATETerminalRuleCall());
	}
;

RULE_LIST : 'List';

RULE_SET : 'Set';

RULE_DATE : 'Date';

RULE_VOID : 'void';

RULE_TYPE_INT : 'Integer';

RULE_TYPE_LONG : 'Long';

RULE_TYPE_DOUBLE : 'Double';

RULE_TYPE_FLOAT : 'Float';

RULE_TYPE_CHAR : 'Character';

RULE_TYPE_STRING : 'String';

RULE_TYPE_BOOLEAN : 'Boolean';

RULE_TYPE_BINARY : 'Binary';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
