/*
 * generated by Xtext 2.10.0
 */
grammar InternalModelDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package uo.diesels.model.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package uo.diesels.model.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import uo.diesels.model.services.ModelDslGrammarAccess;

}

@parser::members {

 	private ModelDslGrammarAccess grammarAccess;

    public InternalModelDslParser(TokenStream input, ModelDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected ModelDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getElementsElementParserRuleCall_0());
			}
			lv_elements_0_0=ruleElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"uo.diesels.model.ModelDsl.Element");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getAllModelTypeParserRuleCall_0());
		}
		this_AllModelType_0=ruleAllModelType
		{
			$current = $this_AllModelType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getSimpleLinkParserRuleCall_1());
		}
		this_SimpleLink_1=ruleSimpleLink
		{
			$current = $this_SimpleLink_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAllModelType
entryRuleAllModelType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAllModelTypeRule()); }
	iv_ruleAllModelType=ruleAllModelType
	{ $current=$iv_ruleAllModelType.current; }
	EOF;

// Rule AllModelType
ruleAllModelType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAllModelTypeAccess().getEntityParserRuleCall_0());
		}
		this_Entity_0=ruleEntity
		{
			$current = $this_Entity_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAllModelTypeAccess().getModelTypeParserRuleCall_1());
		}
		this_ModelType_1=ruleModelType
		{
			$current = $this_ModelType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEntityAccess().getSimpleEntityParserRuleCall_0());
		}
		this_SimpleEntity_0=ruleSimpleEntity
		{
			$current = $this_SimpleEntity_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityAccess().getAssociativeEntityParserRuleCall_1());
		}
		this_AssociativeEntity_1=ruleAssociativeEntity
		{
			$current = $this_AssociativeEntity_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleModelType
entryRuleModelType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelTypeRule()); }
	iv_ruleModelType=ruleModelType
	{ $current=$iv_ruleModelType.current; }
	EOF;

// Rule ModelType
ruleModelType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getModelTypeAccess().getEnumerableParserRuleCall_0());
		}
		this_Enumerable_0=ruleEnumerable
		{
			$current = $this_Enumerable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getModelTypeAccess().getValueTypeParserRuleCall_1());
		}
		this_ValueType_1=ruleValueType
		{
			$current = $this_ValueType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleEntity
entryRuleSimpleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleEntityRule()); }
	iv_ruleSimpleEntity=ruleSimpleEntity
	{ $current=$iv_ruleSimpleEntity.current; }
	EOF;

// Rule SimpleEntity
ruleSimpleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Entity'
		{
			newLeafNode(otherlv_0, grammarAccess.getSimpleEntityAccess().getEntityKeyword_0());
		}
		(
			(
				lv_implementation_1_0='abstract'
				{
					newLeafNode(lv_implementation_1_0, grammarAccess.getSimpleEntityAccess().getImplementationAbstractKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleEntityRule());
					}
					setWithLastConsumed($current, "implementation", lv_implementation_1_0, "abstract");
				}
			)
		)?
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSimpleEntityAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='extends'
			{
				newLeafNode(otherlv_3, grammarAccess.getSimpleEntityAccess().getExtendsKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleEntityRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getSimpleEntityAccess().getSuperClassSimpleEntityCrossReference_3_1_0());
					}
				)
			)
		)?
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getSimpleEntityAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleEntityAccess().getAttributesIdDefIdAttributeParserRuleCall_5_0());
				}
				lv_attributesId_6_0=ruleDefIdAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleEntityRule());
					}
					add(
						$current,
						"attributesId",
						lv_attributesId_6_0,
						"uo.diesels.model.ModelDsl.DefIdAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleEntityAccess().getAttributesDefAttributeParserRuleCall_6_0());
				}
				lv_attributes_7_0=ruleDefAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleEntityRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_7_0,
						"uo.diesels.model.ModelDsl.DefAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleEntityAccess().getMethodsMethodParserRuleCall_7_0());
				}
				lv_methods_8_0=ruleMethod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleEntityRule());
					}
					add(
						$current,
						"methods",
						lv_methods_8_0,
						"uo.diesels.model.ModelDsl.Method");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getSimpleEntityAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleAssociativeEntity
entryRuleAssociativeEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssociativeEntityRule()); }
	iv_ruleAssociativeEntity=ruleAssociativeEntity
	{ $current=$iv_ruleAssociativeEntity.current; }
	EOF;

// Rule AssociativeEntity
ruleAssociativeEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EntityLink'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssociativeEntityAccess().getEntityLinkKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAssociativeEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssociativeEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAssociativeEntityAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssociativeEntityAccess().getRelationsRelationParserRuleCall_3_0());
				}
				lv_relations_3_0=ruleRelation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssociativeEntityRule());
					}
					add(
						$current,
						"relations",
						lv_relations_3_0,
						"uo.diesels.model.ModelDsl.Relation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAssociativeEntityAccess().getRelationsRelationParserRuleCall_4_0());
				}
				lv_relations_4_0=ruleRelation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssociativeEntityRule());
					}
					add(
						$current,
						"relations",
						lv_relations_4_0,
						"uo.diesels.model.ModelDsl.Relation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAssociativeEntityAccess().getAttributesDefAttributeParserRuleCall_5_0());
				}
				lv_attributes_5_0=ruleDefAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssociativeEntityRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_5_0,
						"uo.diesels.model.ModelDsl.DefAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getAssociativeEntityAccess().getMethodsMethodParserRuleCall_6_0());
				}
				lv_methods_6_0=ruleMethod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssociativeEntityRule());
					}
					add(
						$current,
						"methods",
						lv_methods_6_0,
						"uo.diesels.model.ModelDsl.Method");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getAssociativeEntityAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleValueType
entryRuleValueType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueTypeRule()); }
	iv_ruleValueType=ruleValueType
	{ $current=$iv_ruleValueType.current; }
	EOF;

// Rule ValueType
ruleValueType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ValueType'
		{
			newLeafNode(otherlv_0, grammarAccess.getValueTypeAccess().getValueTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getValueTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getValueTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getValueTypeAccess().getAttributesDefAttributeParserRuleCall_3_0());
				}
				lv_attributes_3_0=ruleDefAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueTypeRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_3_0,
						"uo.diesels.model.ModelDsl.DefAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getValueTypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEnumerable
entryRuleEnumerable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerableRule()); }
	iv_ruleEnumerable=ruleEnumerable
	{ $current=$iv_ruleEnumerable.current; }
	EOF;

// Rule Enumerable
ruleEnumerable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Enumerable'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumerableAccess().getEnumerableKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumerableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumerableAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				lv_enums_3_0=RULE_ENUMERATE
				{
					newLeafNode(lv_enums_3_0, grammarAccess.getEnumerableAccess().getEnumsENUMERATETerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerableRule());
					}
					addWithLastConsumed(
						$current,
						"enums",
						lv_enums_3_0,
						"uo.diesels.model.ModelDsl.ENUMERATE");
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getEnumerableAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSimpleLink
entryRuleSimpleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleLinkRule()); }
	iv_ruleSimpleLink=ruleSimpleLink
	{ $current=$iv_ruleSimpleLink.current; }
	EOF;

// Rule SimpleLink
ruleSimpleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Link'
		{
			newLeafNode(otherlv_0, grammarAccess.getSimpleLinkAccess().getLinkKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSimpleLinkAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleLinkRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSimpleLinkAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleLinkAccess().getRelationsRelationParserRuleCall_3_0());
				}
				lv_relations_3_0=ruleRelation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleLinkRule());
					}
					add(
						$current,
						"relations",
						lv_relations_3_0,
						"uo.diesels.model.ModelDsl.Relation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleLinkAccess().getRelationsRelationParserRuleCall_4_0());
				}
				lv_relations_4_0=ruleRelation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleLinkRule());
					}
					add(
						$current,
						"relations",
						lv_relations_4_0,
						"uo.diesels.model.ModelDsl.Relation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getSimpleLinkAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	iv_ruleRelation=ruleRelation
	{ $current=$iv_ruleRelation.current; }
	EOF;

// Rule Relation
ruleRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationAccess().getMultiplicityMultiplicityParserRuleCall_0_0());
				}
				lv_multiplicity_0_0=ruleMultiplicity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationRule());
					}
					set(
						$current,
						"multiplicity",
						lv_multiplicity_0_0,
						"uo.diesels.model.ModelDsl.Multiplicity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getRelationAccess().getTypeEntityCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getRelationAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					lv_navigable_3_1='navigable'
					{
						newLeafNode(lv_navigable_3_1, grammarAccess.getRelationAccess().getNavigableNavigableKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationRule());
						}
						setWithLastConsumed($current, "navigable", lv_navigable_3_1, null);
					}
					    |
					lv_navigable_3_2='non-navigable'
					{
						newLeafNode(lv_navigable_3_2, grammarAccess.getRelationAccess().getNavigableNonNavigableKeyword_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationRule());
						}
						setWithLastConsumed($current, "navigable", lv_navigable_3_2, null);
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDefAttribute
entryRuleDefAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefAttributeRule()); }
	iv_ruleDefAttribute=ruleDefAttribute
	{ $current=$iv_ruleDefAttribute.current; }
	EOF;

// Rule DefAttribute
ruleDefAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDefAttributeAccess().getDefSimpleVariableParserRuleCall_0_0_0());
				}
				this_DefSimpleVariable_0=ruleDefSimpleVariable
				{
					$current = $this_DefSimpleVariable_0.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getDefAttributeAccess().getDefModelTypeVariableParserRuleCall_0_0_1());
				}
				this_DefModelTypeVariable_1=ruleDefModelTypeVariable
				{
					$current = $this_DefModelTypeVariable_1.current;
					afterParserOrEnumRuleCall();
				}
			)
			(
				(
					(
						lv_nullable_2_1='nullable'
						{
							newLeafNode(lv_nullable_2_1, grammarAccess.getDefAttributeAccess().getNullableNullableKeyword_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDefAttributeRule());
							}
							setWithLastConsumed($current, "nullable", lv_nullable_2_1, null);
						}
						    |
						lv_nullable_2_2='non-nullable'
						{
							newLeafNode(lv_nullable_2_2, grammarAccess.getDefAttributeAccess().getNullableNonNullableKeyword_0_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDefAttributeRule());
							}
							setWithLastConsumed($current, "nullable", lv_nullable_2_2, null);
						}
					)
				)
			)?
		)
		    |
		{
			newCompositeNode(grammarAccess.getDefAttributeAccess().getDefCollectionTypeAttributeParserRuleCall_1());
		}
		this_DefCollectionTypeAttribute_3=ruleDefCollectionTypeAttribute
		{
			$current = $this_DefCollectionTypeAttribute_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDefVariable
entryRuleDefVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefVariableRule()); }
	iv_ruleDefVariable=ruleDefVariable
	{ $current=$iv_ruleDefVariable.current; }
	EOF;

// Rule DefVariable
ruleDefVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDefVariableAccess().getDefSimpleVariableParserRuleCall_0());
		}
		this_DefSimpleVariable_0=ruleDefSimpleVariable
		{
			$current = $this_DefSimpleVariable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefVariableAccess().getDefAllModelTypeVariableParserRuleCall_1());
		}
		this_DefAllModelTypeVariable_1=ruleDefAllModelTypeVariable
		{
			$current = $this_DefAllModelTypeVariable_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefVariableAccess().getDefCollectionTypeVariableParserRuleCall_2());
		}
		this_DefCollectionTypeVariable_2=ruleDefCollectionTypeVariable
		{
			$current = $this_DefCollectionTypeVariable_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDefIdAttribute
entryRuleDefIdAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefIdAttributeRule()); }
	iv_ruleDefIdAttribute=ruleDefIdAttribute
	{ $current=$iv_ruleDefIdAttribute.current; }
	EOF;

// Rule DefIdAttribute
ruleDefIdAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDefIdAttributeAccess().getDefSimpleVariableParserRuleCall_0_0());
			}
			this_DefSimpleVariable_0=ruleDefSimpleVariable
			{
				$current = $this_DefSimpleVariable_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getDefIdAttributeAccess().getDefModelTypeVariableParserRuleCall_0_1());
			}
			this_DefModelTypeVariable_1=ruleDefModelTypeVariable
			{
				$current = $this_DefModelTypeVariable_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getDefIdAttributeAccess().getDefLinkVariableParserRuleCall_0_2());
			}
			this_DefLinkVariable_2=ruleDefLinkVariable
			{
				$current = $this_DefLinkVariable_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_3='id'
		{
			newLeafNode(otherlv_3, grammarAccess.getDefIdAttributeAccess().getIdKeyword_1());
		}
	)
;

// Entry rule entryRuleDefAllModelTypeVariable
entryRuleDefAllModelTypeVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefAllModelTypeVariableRule()); }
	iv_ruleDefAllModelTypeVariable=ruleDefAllModelTypeVariable
	{ $current=$iv_ruleDefAllModelTypeVariable.current; }
	EOF;

// Rule DefAllModelTypeVariable
ruleDefAllModelTypeVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefAllModelTypeVariableRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getDefAllModelTypeVariableAccess().getTypeAllModelTypeCrossReference_0_0());
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDefAllModelTypeVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefAllModelTypeVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDefSimpleVariable
entryRuleDefSimpleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefSimpleVariableRule()); }
	iv_ruleDefSimpleVariable=ruleDefSimpleVariable
	{ $current=$iv_ruleDefSimpleVariable.current; }
	EOF;

// Rule DefSimpleVariable
ruleDefSimpleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDefSimpleVariableAccess().getTypeTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefSimpleVariableRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"uo.diesels.model.ModelDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDefSimpleVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefSimpleVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDefModelTypeVariable
entryRuleDefModelTypeVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefModelTypeVariableRule()); }
	iv_ruleDefModelTypeVariable=ruleDefModelTypeVariable
	{ $current=$iv_ruleDefModelTypeVariable.current; }
	EOF;

// Rule DefModelTypeVariable
ruleDefModelTypeVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefModelTypeVariableRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getDefModelTypeVariableAccess().getTypeModelTypeCrossReference_0_0());
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDefModelTypeVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefModelTypeVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDefCollectionTypeAttribute
entryRuleDefCollectionTypeAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefCollectionTypeAttributeRule()); }
	iv_ruleDefCollectionTypeAttribute=ruleDefCollectionTypeAttribute
	{ $current=$iv_ruleDefCollectionTypeAttribute.current; }
	EOF;

// Rule DefCollectionTypeAttribute
ruleDefCollectionTypeAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDefCollectionTypeAttributeAccess().getDefModelModelTypeCollectionVariableParserRuleCall_0());
		}
		this_DefModelModelTypeCollectionVariable_0=ruleDefModelModelTypeCollectionVariable
		{
			$current = $this_DefModelModelTypeCollectionVariable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefCollectionTypeAttributeAccess().getDefModelSimpleTypeCollectionVariableParserRuleCall_1());
		}
		this_DefModelSimpleTypeCollectionVariable_1=ruleDefModelSimpleTypeCollectionVariable
		{
			$current = $this_DefModelSimpleTypeCollectionVariable_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDefCollectionTypeVariable
entryRuleDefCollectionTypeVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefCollectionTypeVariableRule()); }
	iv_ruleDefCollectionTypeVariable=ruleDefCollectionTypeVariable
	{ $current=$iv_ruleDefCollectionTypeVariable.current; }
	EOF;

// Rule DefCollectionTypeVariable
ruleDefCollectionTypeVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDefCollectionTypeVariableAccess().getTypeAllModelTypeCollectionParserRuleCall_0_0_0());
					}
					lv_type_0_0=ruleAllModelTypeCollection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDefCollectionTypeVariableRule());
						}
						set(
							$current,
							"type",
							lv_type_0_0,
							"uo.diesels.model.ModelDsl.AllModelTypeCollection");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getDefCollectionTypeVariableAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDefCollectionTypeVariableRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDefCollectionTypeVariableAccess().getTypeSimpleTypeCollectionParserRuleCall_1_0_0());
					}
					lv_type_2_0=ruleSimpleTypeCollection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDefCollectionTypeVariableRule());
						}
						set(
							$current,
							"type",
							lv_type_2_0,
							"uo.diesels.model.ModelDsl.SimpleTypeCollection");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_name_3_0=RULE_ID
					{
						newLeafNode(lv_name_3_0, grammarAccess.getDefCollectionTypeVariableAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDefCollectionTypeVariableRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDefModelModelTypeCollectionVariable
entryRuleDefModelModelTypeCollectionVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefModelModelTypeCollectionVariableRule()); }
	iv_ruleDefModelModelTypeCollectionVariable=ruleDefModelModelTypeCollectionVariable
	{ $current=$iv_ruleDefModelModelTypeCollectionVariable.current; }
	EOF;

// Rule DefModelModelTypeCollectionVariable
ruleDefModelModelTypeCollectionVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDefModelModelTypeCollectionVariableAccess().getTypeModelTypeCollectionParserRuleCall_0_0());
				}
				lv_type_0_0=ruleModelTypeCollection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefModelModelTypeCollectionVariableRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"uo.diesels.model.ModelDsl.ModelTypeCollection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDefModelModelTypeCollectionVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefModelModelTypeCollectionVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDefModelSimpleTypeCollectionVariable
entryRuleDefModelSimpleTypeCollectionVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefModelSimpleTypeCollectionVariableRule()); }
	iv_ruleDefModelSimpleTypeCollectionVariable=ruleDefModelSimpleTypeCollectionVariable
	{ $current=$iv_ruleDefModelSimpleTypeCollectionVariable.current; }
	EOF;

// Rule DefModelSimpleTypeCollectionVariable
ruleDefModelSimpleTypeCollectionVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDefModelSimpleTypeCollectionVariableAccess().getTypeSimpleTypeCollectionParserRuleCall_0_0());
				}
				lv_type_0_0=ruleSimpleTypeCollection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefModelSimpleTypeCollectionVariableRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"uo.diesels.model.ModelDsl.SimpleTypeCollection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDefModelSimpleTypeCollectionVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefModelSimpleTypeCollectionVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDefLinkVariable
entryRuleDefLinkVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefLinkVariableRule()); }
	iv_ruleDefLinkVariable=ruleDefLinkVariable
	{ $current=$iv_ruleDefLinkVariable.current; }
	EOF;

// Rule DefLinkVariable
ruleDefLinkVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Link.'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefLinkVariableAccess().getLinkKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefLinkVariableRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDefLinkVariableAccess().getTypeLinkCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDefLinkVariableAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefLinkVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	iv_ruleMethod=ruleMethod
	{ $current=$iv_ruleMethod.current; }
	EOF;

// Rule Method
ruleMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMethodAccess().getMethodSimpleReturnParserRuleCall_0());
		}
		this_MethodSimpleReturn_0=ruleMethodSimpleReturn
		{
			$current = $this_MethodSimpleReturn_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMethodAccess().getMethodCollectionReturnParserRuleCall_1());
		}
		this_MethodCollectionReturn_1=ruleMethodCollectionReturn
		{
			$current = $this_MethodCollectionReturn_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMethodAccess().getMethodAllModelReturnParserRuleCall_2());
		}
		this_MethodAllModelReturn_2=ruleMethodAllModelReturn
		{
			$current = $this_MethodAllModelReturn_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMethodSimpleReturn
entryRuleMethodSimpleReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodSimpleReturnRule()); }
	iv_ruleMethodSimpleReturn=ruleMethodSimpleReturn
	{ $current=$iv_ruleMethodSimpleReturn.current; }
	EOF;

// Rule MethodSimpleReturn
ruleMethodSimpleReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodSimpleReturnAccess().getReturnTypeSimpleReturnTypeParserRuleCall_0_0());
				}
				lv_returnType_0_0=ruleSimpleReturnType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodSimpleReturnRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_0_0,
						"uo.diesels.model.ModelDsl.SimpleReturnType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMethodSimpleReturnAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodSimpleReturnRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getMethodSimpleReturnAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodSimpleReturnAccess().getParametersDefVariableParserRuleCall_3_0_0());
					}
					lv_parameters_3_0=ruleDefVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodSimpleReturnRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"uo.diesels.model.ModelDsl.DefVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getMethodSimpleReturnAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodSimpleReturnAccess().getParametersDefVariableParserRuleCall_3_1_1_0());
						}
						lv_parameters_5_0=ruleDefVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodSimpleReturnRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_5_0,
								"uo.diesels.model.ModelDsl.DefVariable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getMethodSimpleReturnAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleMethodCollectionReturn
entryRuleMethodCollectionReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodCollectionReturnRule()); }
	iv_ruleMethodCollectionReturn=ruleMethodCollectionReturn
	{ $current=$iv_ruleMethodCollectionReturn.current; }
	EOF;

// Rule MethodCollectionReturn
ruleMethodCollectionReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodCollectionReturnAccess().getReturnTypeCollectionReturnTypeParserRuleCall_0_0());
				}
				lv_returnType_0_0=ruleCollectionReturnType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodCollectionReturnRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_0_0,
						"uo.diesels.model.ModelDsl.CollectionReturnType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMethodCollectionReturnAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodCollectionReturnRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getMethodCollectionReturnAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodCollectionReturnAccess().getParametersDefVariableParserRuleCall_3_0_0());
					}
					lv_parameters_3_0=ruleDefVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodCollectionReturnRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"uo.diesels.model.ModelDsl.DefVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getMethodCollectionReturnAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodCollectionReturnAccess().getParametersDefVariableParserRuleCall_3_1_1_0());
						}
						lv_parameters_5_0=ruleDefVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodCollectionReturnRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_5_0,
								"uo.diesels.model.ModelDsl.DefVariable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getMethodCollectionReturnAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleMethodAllModelReturn
entryRuleMethodAllModelReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodAllModelReturnRule()); }
	iv_ruleMethodAllModelReturn=ruleMethodAllModelReturn
	{ $current=$iv_ruleMethodAllModelReturn.current; }
	EOF;

// Rule MethodAllModelReturn
ruleMethodAllModelReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodAllModelReturnRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getMethodAllModelReturnAccess().getReturnTypeAllModelTypeCrossReference_0_0());
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMethodAllModelReturnAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodAllModelReturnRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getMethodAllModelReturnAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodAllModelReturnAccess().getParametersDefVariableParserRuleCall_3_0_0());
					}
					lv_parameters_3_0=ruleDefVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodAllModelReturnRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"uo.diesels.model.ModelDsl.DefVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getMethodAllModelReturnAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodAllModelReturnAccess().getParametersDefVariableParserRuleCall_3_1_1_0());
						}
						lv_parameters_5_0=ruleDefVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodAllModelReturnRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_5_0,
								"uo.diesels.model.ModelDsl.DefVariable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getMethodAllModelReturnAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleAllModelTypeCollection
entryRuleAllModelTypeCollection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAllModelTypeCollectionRule()); }
	iv_ruleAllModelTypeCollection=ruleAllModelTypeCollection
	{ $current=$iv_ruleAllModelTypeCollection.current; }
	EOF;

// Rule AllModelTypeCollection
ruleAllModelTypeCollection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_collection_0_1=RULE_LIST
					{
						newLeafNode(lv_collection_0_1, grammarAccess.getAllModelTypeCollectionAccess().getCollectionLISTTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAllModelTypeCollectionRule());
						}
						setWithLastConsumed(
							$current,
							"collection",
							lv_collection_0_1,
							"uo.diesels.model.ModelDsl.LIST");
					}
					    |
					lv_collection_0_2=RULE_SET
					{
						newLeafNode(lv_collection_0_2, grammarAccess.getAllModelTypeCollectionAccess().getCollectionSETTerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAllModelTypeCollectionRule());
						}
						setWithLastConsumed(
							$current,
							"collection",
							lv_collection_0_2,
							"uo.diesels.model.ModelDsl.SET");
					}
				)
			)
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getAllModelTypeCollectionAccess().getLessThanSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAllModelTypeCollectionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getAllModelTypeCollectionAccess().getTypeAllModelTypeCrossReference_2_0());
				}
			)
		)
		otherlv_3='>'
		{
			newLeafNode(otherlv_3, grammarAccess.getAllModelTypeCollectionAccess().getGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleModelTypeCollection
entryRuleModelTypeCollection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelTypeCollectionRule()); }
	iv_ruleModelTypeCollection=ruleModelTypeCollection
	{ $current=$iv_ruleModelTypeCollection.current; }
	EOF;

// Rule ModelTypeCollection
ruleModelTypeCollection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_collection_0_1=RULE_LIST
					{
						newLeafNode(lv_collection_0_1, grammarAccess.getModelTypeCollectionAccess().getCollectionLISTTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelTypeCollectionRule());
						}
						setWithLastConsumed(
							$current,
							"collection",
							lv_collection_0_1,
							"uo.diesels.model.ModelDsl.LIST");
					}
					    |
					lv_collection_0_2=RULE_SET
					{
						newLeafNode(lv_collection_0_2, grammarAccess.getModelTypeCollectionAccess().getCollectionSETTerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelTypeCollectionRule());
						}
						setWithLastConsumed(
							$current,
							"collection",
							lv_collection_0_2,
							"uo.diesels.model.ModelDsl.SET");
					}
				)
			)
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getModelTypeCollectionAccess().getLessThanSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelTypeCollectionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getModelTypeCollectionAccess().getTypeModelTypeCrossReference_2_0());
				}
			)
		)
		otherlv_3='>'
		{
			newLeafNode(otherlv_3, grammarAccess.getModelTypeCollectionAccess().getGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleSimpleTypeCollection
entryRuleSimpleTypeCollection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleTypeCollectionRule()); }
	iv_ruleSimpleTypeCollection=ruleSimpleTypeCollection
	{ $current=$iv_ruleSimpleTypeCollection.current; }
	EOF;

// Rule SimpleTypeCollection
ruleSimpleTypeCollection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_collection_0_1=RULE_LIST
					{
						newLeafNode(lv_collection_0_1, grammarAccess.getSimpleTypeCollectionAccess().getCollectionLISTTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleTypeCollectionRule());
						}
						setWithLastConsumed(
							$current,
							"collection",
							lv_collection_0_1,
							"uo.diesels.model.ModelDsl.LIST");
					}
					    |
					lv_collection_0_2=RULE_SET
					{
						newLeafNode(lv_collection_0_2, grammarAccess.getSimpleTypeCollectionAccess().getCollectionSETTerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleTypeCollectionRule());
						}
						setWithLastConsumed(
							$current,
							"collection",
							lv_collection_0_2,
							"uo.diesels.model.ModelDsl.SET");
					}
				)
			)
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getSimpleTypeCollectionAccess().getLessThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleTypeCollectionAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleTypeCollectionRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"uo.diesels.model.ModelDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='>'
		{
			newLeafNode(otherlv_3, grammarAccess.getSimpleTypeCollectionAccess().getGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleCollectionReturnType
entryRuleCollectionReturnType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionReturnTypeRule()); }
	iv_ruleCollectionReturnType=ruleCollectionReturnType
	{ $current=$iv_ruleCollectionReturnType.current; }
	EOF;

// Rule CollectionReturnType
ruleCollectionReturnType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCollectionReturnTypeAccess().getAllModelTypeCollectionParserRuleCall_0());
		}
		this_AllModelTypeCollection_0=ruleAllModelTypeCollection
		{
			$current = $this_AllModelTypeCollection_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCollectionReturnTypeAccess().getSimpleTypeCollectionParserRuleCall_1());
		}
		this_SimpleTypeCollection_1=ruleSimpleTypeCollection
		{
			$current = $this_SimpleTypeCollection_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleReturnType
entryRuleSimpleReturnType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSimpleReturnTypeRule()); }
	iv_ruleSimpleReturnType=ruleSimpleReturnType
	{ $current=$iv_ruleSimpleReturnType.current.getText(); }
	EOF;

// Rule SimpleReturnType
ruleSimpleReturnType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimpleReturnTypeAccess().getTypeParserRuleCall_0());
		}
		this_Type_0=ruleType
		{
			$current.merge(this_Type_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_VOID_1=RULE_VOID
		{
			$current.merge(this_VOID_1);
		}
		{
			newLeafNode(this_VOID_1, grammarAccess.getSimpleReturnTypeAccess().getVOIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current.getText(); }
	EOF;

// Rule Type
ruleType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getBasicTypeParserRuleCall_0());
		}
		this_BasicType_0=ruleBasicType
		{
			$current.merge(this_BasicType_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getComplexTypeParserRuleCall_1());
		}
		this_ComplexType_1=ruleComplexType
		{
			$current.merge(this_ComplexType_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBasicType
entryRuleBasicType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBasicTypeRule()); }
	iv_ruleBasicType=ruleBasicType
	{ $current=$iv_ruleBasicType.current.getText(); }
	EOF;

// Rule BasicType
ruleBasicType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_TYPE_INT_0=RULE_TYPE_INT
		{
			$current.merge(this_TYPE_INT_0);
		}
		{
			newLeafNode(this_TYPE_INT_0, grammarAccess.getBasicTypeAccess().getTYPE_INTTerminalRuleCall_0());
		}
		    |
		this_TYPE_DOUBLE_1=RULE_TYPE_DOUBLE
		{
			$current.merge(this_TYPE_DOUBLE_1);
		}
		{
			newLeafNode(this_TYPE_DOUBLE_1, grammarAccess.getBasicTypeAccess().getTYPE_DOUBLETerminalRuleCall_1());
		}
		    |
		this_TYPE_FLOAT_2=RULE_TYPE_FLOAT
		{
			$current.merge(this_TYPE_FLOAT_2);
		}
		{
			newLeafNode(this_TYPE_FLOAT_2, grammarAccess.getBasicTypeAccess().getTYPE_FLOATTerminalRuleCall_2());
		}
		    |
		this_TYPE_LONG_3=RULE_TYPE_LONG
		{
			$current.merge(this_TYPE_LONG_3);
		}
		{
			newLeafNode(this_TYPE_LONG_3, grammarAccess.getBasicTypeAccess().getTYPE_LONGTerminalRuleCall_3());
		}
		    |
		this_TYPE_CHAR_4=RULE_TYPE_CHAR
		{
			$current.merge(this_TYPE_CHAR_4);
		}
		{
			newLeafNode(this_TYPE_CHAR_4, grammarAccess.getBasicTypeAccess().getTYPE_CHARTerminalRuleCall_4());
		}
		    |
		this_TYPE_STRING_5=RULE_TYPE_STRING
		{
			$current.merge(this_TYPE_STRING_5);
		}
		{
			newLeafNode(this_TYPE_STRING_5, grammarAccess.getBasicTypeAccess().getTYPE_STRINGTerminalRuleCall_5());
		}
		    |
		this_TYPE_BOOLEAN_6=RULE_TYPE_BOOLEAN
		{
			$current.merge(this_TYPE_BOOLEAN_6);
		}
		{
			newLeafNode(this_TYPE_BOOLEAN_6, grammarAccess.getBasicTypeAccess().getTYPE_BOOLEANTerminalRuleCall_6());
		}
		    |
		this_TYPE_BINARY_7=RULE_TYPE_BINARY
		{
			$current.merge(this_TYPE_BINARY_7);
		}
		{
			newLeafNode(this_TYPE_BINARY_7, grammarAccess.getBasicTypeAccess().getTYPE_BINARYTerminalRuleCall_7());
		}
	)
;

// Entry rule entryRuleComplexType
entryRuleComplexType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getComplexTypeRule()); }
	iv_ruleComplexType=ruleComplexType
	{ $current=$iv_ruleComplexType.current.getText(); }
	EOF;

// Rule ComplexType
ruleComplexType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_DATE_0=RULE_DATE
	{
		$current.merge(this_DATE_0);
	}
	{
		newLeafNode(this_DATE_0, grammarAccess.getComplexTypeAccess().getDATETerminalRuleCall());
	}
;

// Entry rule entryRuleMultiplicity
entryRuleMultiplicity returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicityRule()); }
	iv_ruleMultiplicity=ruleMultiplicity
	{ $current=$iv_ruleMultiplicity.current.getText(); }
	EOF;

// Rule Multiplicity
ruleMultiplicity returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ONE_0=RULE_ONE
		{
			$current.merge(this_ONE_0);
		}
		{
			newLeafNode(this_ONE_0, grammarAccess.getMultiplicityAccess().getONETerminalRuleCall_0());
		}
		    |
		this_MANY_1=RULE_MANY
		{
			$current.merge(this_MANY_1);
		}
		{
			newLeafNode(this_MANY_1, grammarAccess.getMultiplicityAccess().getMANYTerminalRuleCall_1());
		}
		    |
		this_ONE_ONE_2=RULE_ONE_ONE
		{
			$current.merge(this_ONE_ONE_2);
		}
		{
			newLeafNode(this_ONE_ONE_2, grammarAccess.getMultiplicityAccess().getONE_ONETerminalRuleCall_2());
		}
	)
;

RULE_ONE : 'one';

RULE_MANY : 'many';

RULE_ONE_ONE : 'one-one';

RULE_LIST : 'List';

RULE_SET : 'Set';

RULE_DATE : 'Date';

RULE_VOID : 'void';

RULE_TYPE_INT : 'Integer';

RULE_TYPE_LONG : 'Long';

RULE_TYPE_DOUBLE : 'Double';

RULE_TYPE_FLOAT : 'Float';

RULE_TYPE_CHAR : 'Character';

RULE_TYPE_STRING : 'String';

RULE_TYPE_BOOLEAN : 'Boolean';

RULE_TYPE_BINARY : 'Binary';

RULE_ENUMERATE : ('A'..'Z'|'\u00D1'|'_') ('A'..'Z'|'0'..'9'|'\u00D1'|'_')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
