/**
 * generated by Xtext 2.10.0
 */
package uo.diesels.model.persistenceDsl.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import uo.diesels.model.persistenceDsl.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see uo.diesels.model.persistenceDsl.PersistenceDslPackage
 * @generated
 */
public class PersistenceDslSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static PersistenceDslPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PersistenceDslSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = PersistenceDslPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case PersistenceDslPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.FINDER:
      {
        Finder finder = (Finder)theEObject;
        T result = caseFinder(finder);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.FINDER_METHOD:
      {
        FinderMethod finderMethod = (FinderMethod)theEObject;
        T result = caseFinderMethod(finderMethod);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.METHOD_SIMPLE_RETURN:
      {
        MethodSimpleReturn methodSimpleReturn = (MethodSimpleReturn)theEObject;
        T result = caseMethodSimpleReturn(methodSimpleReturn);
        if (result == null) result = caseFinderMethod(methodSimpleReturn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.METHOD_ENTITY_RETURN:
      {
        MethodEntityReturn methodEntityReturn = (MethodEntityReturn)theEObject;
        T result = caseMethodEntityReturn(methodEntityReturn);
        if (result == null) result = caseFinderMethod(methodEntityReturn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.METHOD_DTO_RETURN:
      {
        MethodDtoReturn methodDtoReturn = (MethodDtoReturn)theEObject;
        T result = caseMethodDtoReturn(methodDtoReturn);
        if (result == null) result = caseFinderMethod(methodDtoReturn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.METHOD_COLLECTION_RETURN:
      {
        MethodCollectionReturn methodCollectionReturn = (MethodCollectionReturn)theEObject;
        T result = caseMethodCollectionReturn(methodCollectionReturn);
        if (result == null) result = caseFinderMethod(methodCollectionReturn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.COLLECTION_RETURN_TYPE:
      {
        CollectionReturnType collectionReturnType = (CollectionReturnType)theEObject;
        T result = caseCollectionReturnType(collectionReturnType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.ENTITY_RETURN_TYPE_COLLECTION:
      {
        EntityReturnTypeCollection entityReturnTypeCollection = (EntityReturnTypeCollection)theEObject;
        T result = caseEntityReturnTypeCollection(entityReturnTypeCollection);
        if (result == null) result = caseCollectionReturnType(entityReturnTypeCollection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.DTO_RETURN_TYPE_COLLECTION:
      {
        DtoReturnTypeCollection dtoReturnTypeCollection = (DtoReturnTypeCollection)theEObject;
        T result = caseDtoReturnTypeCollection(dtoReturnTypeCollection);
        if (result == null) result = caseCollectionReturnType(dtoReturnTypeCollection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.SIMPLE_RETURN_TYPE_COLLECTION:
      {
        SimpleReturnTypeCollection simpleReturnTypeCollection = (SimpleReturnTypeCollection)theEObject;
        T result = caseSimpleReturnTypeCollection(simpleReturnTypeCollection);
        if (result == null) result = caseCollectionReturnType(simpleReturnTypeCollection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.ALL_MODEL_TYPE_COLLECTION:
      {
        AllModelTypeCollection allModelTypeCollection = (AllModelTypeCollection)theEObject;
        T result = caseAllModelTypeCollection(allModelTypeCollection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.SIMPLE_TYPE_COLLECTION:
      {
        SimpleTypeCollection simpleTypeCollection = (SimpleTypeCollection)theEObject;
        T result = caseSimpleTypeCollection(simpleTypeCollection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.DEF_VARIABLE:
      {
        DefVariable defVariable = (DefVariable)theEObject;
        T result = caseDefVariable(defVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.DEF_ALL_MODEL_TYPE_VARIABLE:
      {
        DefAllModelTypeVariable defAllModelTypeVariable = (DefAllModelTypeVariable)theEObject;
        T result = caseDefAllModelTypeVariable(defAllModelTypeVariable);
        if (result == null) result = caseDefVariable(defAllModelTypeVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.DEF_SIMPLE_VARIABLE:
      {
        DefSimpleVariable defSimpleVariable = (DefSimpleVariable)theEObject;
        T result = caseDefSimpleVariable(defSimpleVariable);
        if (result == null) result = caseDefVariable(defSimpleVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.DEF_COLLECTION_TYPE_VARIABLE:
      {
        DefCollectionTypeVariable defCollectionTypeVariable = (DefCollectionTypeVariable)theEObject;
        T result = caseDefCollectionTypeVariable(defCollectionTypeVariable);
        if (result == null) result = caseDefVariable(defCollectionTypeVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.DEF_ALL_MODEL_TYPE_COLLECTION_VARIABLE:
      {
        DefAllModelTypeCollectionVariable defAllModelTypeCollectionVariable = (DefAllModelTypeCollectionVariable)theEObject;
        T result = caseDefAllModelTypeCollectionVariable(defAllModelTypeCollectionVariable);
        if (result == null) result = caseDefCollectionTypeVariable(defAllModelTypeCollectionVariable);
        if (result == null) result = caseDefVariable(defAllModelTypeCollectionVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PersistenceDslPackage.DEF_SIMPLE_TYPE_COLLECTION_VARIABLE:
      {
        DefSimpleTypeCollectionVariable defSimpleTypeCollectionVariable = (DefSimpleTypeCollectionVariable)theEObject;
        T result = caseDefSimpleTypeCollectionVariable(defSimpleTypeCollectionVariable);
        if (result == null) result = caseDefCollectionTypeVariable(defSimpleTypeCollectionVariable);
        if (result == null) result = caseDefVariable(defSimpleTypeCollectionVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Finder</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Finder</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFinder(Finder object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Finder Method</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Finder Method</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFinderMethod(FinderMethod object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Method Simple Return</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Method Simple Return</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMethodSimpleReturn(MethodSimpleReturn object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Method Entity Return</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Method Entity Return</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMethodEntityReturn(MethodEntityReturn object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Method Dto Return</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Method Dto Return</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMethodDtoReturn(MethodDtoReturn object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Method Collection Return</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Method Collection Return</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMethodCollectionReturn(MethodCollectionReturn object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Collection Return Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Collection Return Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCollectionReturnType(CollectionReturnType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Return Type Collection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Return Type Collection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityReturnTypeCollection(EntityReturnTypeCollection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Dto Return Type Collection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Dto Return Type Collection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDtoReturnTypeCollection(DtoReturnTypeCollection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Simple Return Type Collection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Simple Return Type Collection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSimpleReturnTypeCollection(SimpleReturnTypeCollection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>All Model Type Collection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>All Model Type Collection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAllModelTypeCollection(AllModelTypeCollection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Simple Type Collection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Simple Type Collection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSimpleTypeCollection(SimpleTypeCollection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Def Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Def Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDefVariable(DefVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Def All Model Type Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Def All Model Type Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDefAllModelTypeVariable(DefAllModelTypeVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Def Simple Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Def Simple Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDefSimpleVariable(DefSimpleVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Def Collection Type Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Def Collection Type Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDefCollectionTypeVariable(DefCollectionTypeVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Def All Model Type Collection Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Def All Model Type Collection Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDefAllModelTypeCollectionVariable(DefAllModelTypeCollectionVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Def Simple Type Collection Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Def Simple Type Collection Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDefSimpleTypeCollectionVariable(DefSimpleTypeCollectionVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //PersistenceDslSwitch
