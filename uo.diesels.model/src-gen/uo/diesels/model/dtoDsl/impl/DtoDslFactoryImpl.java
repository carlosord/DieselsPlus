/**
 * generated by Xtext 2.10.0
 */
package uo.diesels.model.dtoDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import uo.diesels.model.dtoDsl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DtoDslFactoryImpl extends EFactoryImpl implements DtoDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static DtoDslFactory init()
  {
    try
    {
      DtoDslFactory theDtoDslFactory = (DtoDslFactory)EPackage.Registry.INSTANCE.getEFactory(DtoDslPackage.eNS_URI);
      if (theDtoDslFactory != null)
      {
        return theDtoDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new DtoDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DtoDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case DtoDslPackage.MODEL: return createModel();
      case DtoDslPackage.DTO: return createDto();
      case DtoDslPackage.DTO_ENTITY: return createDtoEntity();
      case DtoDslPackage.DTO_FOR: return createDtoFor();
      case DtoDslPackage.DEF_DTO_ATTRIBUTE: return createDefDtoAttribute();
      case DtoDslPackage.DEF_DTO_SIMPLE_VARIABLE: return createDefDtoSimpleVariable();
      case DtoDslPackage.DEF_DTO_MODEL_TYPE_VARIABLE: return createDefDtoModelTypeVariable();
      case DtoDslPackage.DEF_DTO_COLLECTION_TYPE_ATTRIBUTE: return createDefDtoCollectionTypeAttribute();
      case DtoDslPackage.DEF_DTO_MODEL_TYPE_COLLECTION_VARIABLE: return createDefDtoModelTypeCollectionVariable();
      case DtoDslPackage.DEF_DTO_SIMPLE_TYPE_COLLECTION_VARIABLE: return createDefDtoSimpleTypeCollectionVariable();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Dto createDto()
  {
    DtoImpl dto = new DtoImpl();
    return dto;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DtoEntity createDtoEntity()
  {
    DtoEntityImpl dtoEntity = new DtoEntityImpl();
    return dtoEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DtoFor createDtoFor()
  {
    DtoForImpl dtoFor = new DtoForImpl();
    return dtoFor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DefDtoAttribute createDefDtoAttribute()
  {
    DefDtoAttributeImpl defDtoAttribute = new DefDtoAttributeImpl();
    return defDtoAttribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DefDtoSimpleVariable createDefDtoSimpleVariable()
  {
    DefDtoSimpleVariableImpl defDtoSimpleVariable = new DefDtoSimpleVariableImpl();
    return defDtoSimpleVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DefDtoModelTypeVariable createDefDtoModelTypeVariable()
  {
    DefDtoModelTypeVariableImpl defDtoModelTypeVariable = new DefDtoModelTypeVariableImpl();
    return defDtoModelTypeVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DefDtoCollectionTypeAttribute createDefDtoCollectionTypeAttribute()
  {
    DefDtoCollectionTypeAttributeImpl defDtoCollectionTypeAttribute = new DefDtoCollectionTypeAttributeImpl();
    return defDtoCollectionTypeAttribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DefDtoModelTypeCollectionVariable createDefDtoModelTypeCollectionVariable()
  {
    DefDtoModelTypeCollectionVariableImpl defDtoModelTypeCollectionVariable = new DefDtoModelTypeCollectionVariableImpl();
    return defDtoModelTypeCollectionVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DefDtoSimpleTypeCollectionVariable createDefDtoSimpleTypeCollectionVariable()
  {
    DefDtoSimpleTypeCollectionVariableImpl defDtoSimpleTypeCollectionVariable = new DefDtoSimpleTypeCollectionVariableImpl();
    return defDtoSimpleTypeCollectionVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DtoDslPackage getDtoDslPackage()
  {
    return (DtoDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static DtoDslPackage getPackage()
  {
    return DtoDslPackage.eINSTANCE;
  }

} //DtoDslFactoryImpl
