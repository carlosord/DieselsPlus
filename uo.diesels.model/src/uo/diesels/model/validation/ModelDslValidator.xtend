/*
 * generated by Xtext 2.9.0
 */
package uo.diesels.model.validation

import org.eclipse.xtext.validation.Check
import uo.diesels.model.modelDsl.Element
import uo.diesels.model.modelDsl.ModelDslPackage
import uo.diesels.model.modelDsl.SimpleEntity
import uo.diesels.model.validation.util.model.validation.ModelValidationUtils

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class ModelDslValidator extends AbstractModelDslValidator {
	
  	public static val INVALID_NAME = 'invalidName'

	@Check
	def checkElementStartsWithCapital(Element element) {
		if (!Character.isUpperCase(element.name.charAt(0))) {
			warning('Name should start with a capital', 
					ModelDslPackage.Literals.ELEMENT__NAME,
					INVALID_NAME)
		}
	}
	
	@Check
	def checkEntityWithId(SimpleEntity entity) {
        var entities = entity.eResource.allContents.filter(typeof(SimpleEntity)).toList;
		if (!ModelValidationUtils.entityHasId(entity) &&
			!ModelValidationUtils.entityIsSuperClass(
				entities , entity.name)) {
			error('Entity should has at least an id attribute', 
					ModelDslPackage.Literals.ELEMENT__NAME,
					INVALID_NAME)
		}
	}
	
	@Check
	def checkEntityWithUniqueId(SimpleEntity entity) {
		if (!ModelValidationUtils.entityHasUniqueId(entity)) {
			error('This entity has another id attribute declared on its superclass', 
					ModelDslPackage.Literals.ELEMENT__NAME,
					INVALID_NAME)
		}
	}
	
}
